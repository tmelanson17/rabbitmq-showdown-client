{
  "version": 3,
  "sources": ["../../../../data/mods/ssb/abilities.ts"],
  "sourcesContent": ["import {SSBSet, ssbSets} from \"./random-teams\";\nimport {getName} from './conditions';\n\n// Used in many abilities, placed here to reduce the number of updates needed and to reduce the chance of errors\nconst STRONG_WEATHERS = ['desolateland', 'primordialsea', 'deltastream', 'heavyhailstorm', 'winterhail', 'turbulence'];\n\n/**\n * Assigns a new set to a Pok\u00E9mon\n * @param pokemon the Pokemon to assign the set to\n * @param newSet the SSBSet to assign\n */\nexport function changeSet(context: Battle, pokemon: Pokemon, newSet: SSBSet, changeAbility = false) {\n\tif (pokemon.transformed) return;\n\tconst evs: StatsTable = {\n\t\thp: newSet.evs?.hp || 0,\n\t\tatk: newSet.evs?.atk || 0,\n\t\tdef: newSet.evs?.def || 0,\n\t\tspa: newSet.evs?.spa || 0,\n\t\tspd: newSet.evs?.spd || 0,\n\t\tspe: newSet.evs?.spe || 0,\n\t};\n\tconst ivs: StatsTable = {\n\t\thp: newSet.ivs?.hp || 31,\n\t\tatk: newSet.ivs?.atk || 31,\n\t\tdef: newSet.ivs?.def || 31,\n\t\tspa: newSet.ivs?.spa || 31,\n\t\tspd: newSet.ivs?.spd || 31,\n\t\tspe: newSet.ivs?.spe || 31,\n\t};\n\tpokemon.set.evs = evs;\n\tpokemon.set.ivs = ivs;\n\tif (newSet.nature) pokemon.set.nature = Array.isArray(newSet.nature) ? context.sample(newSet.nature) : newSet.nature;\n\tconst oldShiny = pokemon.set.shiny;\n\tpokemon.set.shiny = (typeof newSet.shiny === 'number') ? context.randomChance(1, newSet.shiny) : !!newSet.shiny;\n\tlet percent = (pokemon.hp / pokemon.baseMaxhp);\n\tif (newSet.species === 'Shedinja') percent = 1;\n\tpokemon.formeChange(newSet.species, context.effect, true);\n\tconst details = pokemon.species.name + (pokemon.level === 100 ? '' : ', L' + pokemon.level) +\n\t\t(pokemon.gender === '' ? '' : ', ' + pokemon.gender) + (pokemon.set.shiny ? ', shiny' : '');\n\tif (oldShiny !== pokemon.set.shiny) context.add('replace', pokemon, details);\n\tif (changeAbility) pokemon.setAbility(newSet.ability as string);\n\n\tpokemon.baseMaxhp = pokemon.species.name === 'Shedinja' ? 1 : Math.floor(Math.floor(\n\t\t2 * pokemon.species.baseStats.hp + pokemon.set.ivs.hp + Math.floor(pokemon.set.evs.hp / 4) + 100\n\t) * pokemon.level / 100 + 10);\n\tconst newMaxHP = pokemon.baseMaxhp;\n\tpokemon.hp = Math.round(newMaxHP * percent);\n\tpokemon.maxhp = newMaxHP;\n\tcontext.add('-heal', pokemon, pokemon.getHealth, '[silent]');\n\tif (pokemon.item) {\n\t\tlet item = newSet.item;\n\t\tif (typeof item !== 'string') item = item[context.random(item.length)];\n\t\tif (context.toID(item) !== (pokemon.item || pokemon.lastItem)) pokemon.setItem(item);\n\t}\n\tif (!pokemon.m.datacorrupt) {\n\t\tconst newMoves = changeMoves(context, pokemon, newSet.moves.concat(newSet.signatureMove));\n\t\tpokemon.moveSlots = newMoves;\n\t\t// @ts-ignore Necessary so pokemon doesn't get 8 moves\n\t\tpokemon.baseMoveSlots = newMoves;\n\t}\n\tcontext.add('-ability', pokemon, `${pokemon.getAbility().name}`);\n\tcontext.add('message', `${pokemon.name} changed form!`);\n}\n\n/**\n * Assigns new moves to a Pokemon\n * @param pokemon The Pokemon whose moveset is to be modified\n * @param newSet The set whose moves should be assigned\n */\nexport function changeMoves(context: Battle, pokemon: Pokemon, newMoves: (string | string[])[]) {\n\tconst carryOver = pokemon.moveSlots.slice().map(m => m.pp / m.maxpp);\n\t// In case there are ever less than 4 moves\n\twhile (carryOver.length < 4) {\n\t\tcarryOver.push(1);\n\t}\n\tconst result = [];\n\tlet slot = 0;\n\tfor (const newMove of newMoves) {\n\t\tconst moveName = Array.isArray(newMove) ? newMove[context.random(newMove.length)] : newMove;\n\t\tconst move = context.dex.moves.get(context.toID(moveName));\n\t\tif (!move.id) continue;\n\t\tconst moveSlot = {\n\t\t\tmove: move.name,\n\t\t\tid: move.id,\n\t\t\t// eslint-disable-next-line max-len\n\t\t\tpp: ((move.noPPBoosts || move.isZ) ? Math.floor(move.pp * carryOver[slot]) : Math.floor((move.pp * (8 / 5)) * carryOver[slot])),\n\t\t\tmaxpp: ((move.noPPBoosts || move.isZ) ? move.pp : move.pp * 8 / 5),\n\t\t\ttarget: move.target,\n\t\t\tdisabled: false,\n\t\t\tdisabledSource: '',\n\t\t\tused: false,\n\t\t};\n\t\tresult.push(moveSlot);\n\t\tslot++;\n\t}\n\treturn result;\n}\n\nexport const Abilities: {[k: string]: ModdedAbilityData} = {\n\t/*\n\t// Example\n\t\"abilityid\": {\n\t\tdesc: \"\", // long description\n\t\tshortDesc: \"\", // short description, shows up in /dt\n\t\tname: \"Ability Name\",\n\t\t// The bulk of an ability is not easily shown in an example since it varies\n\t\t// For more examples, see https://github.com/smogon/pokemon-showdown/blob/master/data/abilities.js\n\t},\n\t*/\n\t// Please keep abilites organized alphabetically based on staff member name!\n\t// Aelita\n\tscyphozoa: {\n\t\tdesc: \"On switch-in, this Pokemon removes all field conditions, entry hazards, and stat boosts on both sides, gaining one random boost for every field condition, entry hazard, or boosted stat that gets cleared. This Pokemon's moves ignore abilities. If this Pokemon is a Zygarde in its 10% or 50% Forme, it changes to Complete Forme when it has 1/2 or less of its maximum HP at the end of the turn.\",\n\t\tshortDesc: \"Power Construct + Mold Breaker. On switch-in, clears everything for random boosts.\",\n\t\tname: \"Scyphozoa\",\n\t\tonSwitchIn(source) {\n\t\t\tlet successes = 0;\n\t\t\tthis.add('-ability', source, 'Scyphozoa');\n\t\t\tthis.add('-clearallboost');\n\t\t\tfor (const pokemon of this.getAllActive()) {\n\t\t\t\tconst boostTotal = Object.values(pokemon.boosts).reduce((num, add) => num + add);\n\t\t\t\tif (boostTotal !== 0 || pokemon.positiveBoosts()) successes++;\n\t\t\t\tpokemon.clearBoosts();\n\t\t\t\tif (pokemon.removeVolatile('substitute')) successes++;\n\t\t\t}\n\t\t\tconst target = source.side.foe.active[0];\n\n\t\t\tconst removeAll = [\n\t\t\t\t'reflect', 'lightscreen', 'auroraveil', 'safeguard', 'mist', 'gmaxsteelsurge',\n\t\t\t\t'spikes', 'toxicspikes', 'stealthrock', 'stickyweb',\n\t\t\t];\n\t\t\tconst silentRemove = ['reflect', 'lightscreen', 'auroraveil', 'safeguard', 'mist'];\n\t\t\tfor (const sideCondition of removeAll) {\n\t\t\t\tif (target.side.removeSideCondition(sideCondition)) {\n\t\t\t\t\tif (!silentRemove.includes(sideCondition)) {\n\t\t\t\t\t\tthis.add('-sideend', target.side, this.dex.conditions.get(sideCondition).name, '[from] ability: Scyphozoa', '[of] ' + source);\n\t\t\t\t\t}\n\t\t\t\t\tsuccesses++;\n\t\t\t\t}\n\t\t\t\tif (source.side.removeSideCondition(sideCondition)) {\n\t\t\t\t\tif (!silentRemove.includes(sideCondition)) {\n\t\t\t\t\t\tthis.add('-sideend', source.side, this.dex.conditions.get(sideCondition).name, '[from] ability: Scyphozoa', '[of] ' + source);\n\t\t\t\t\t}\n\t\t\t\t\tsuccesses++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (const clear in this.field.pseudoWeather) {\n\t\t\t\tif (clear.endsWith('mod') || clear.endsWith('clause')) continue;\n\t\t\t\tthis.field.removePseudoWeather(clear);\n\t\t\t\tsuccesses++;\n\t\t\t}\n\t\t\tif (this.field.clearWeather()) successes++;\n\t\t\tif (this.field.clearTerrain()) successes++;\n\t\t\tconst stats: BoostID[] = [];\n\t\t\tconst exclude: string[] = ['accuracy', 'evasion'];\n\t\t\tfor (let x = 0; x < successes; x++) {\n\t\t\t\tlet stat: BoostID;\n\t\t\t\tfor (stat in source.boosts) {\n\t\t\t\t\tif (source.boosts[stat] < 6 && !exclude.includes(stat)) {\n\t\t\t\t\t\tstats.push(stat);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (stats.length) {\n\t\t\t\t\tconst randomStat = this.sample(stats);\n\t\t\t\t\tconst boost: SparseBoostsTable = {};\n\t\t\t\t\tboost[randomStat] = 1;\n\t\t\t\t\tthis.boost(boost, source, source);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tisPermanent: true,\n\t\tonModifyMove(move) {\n\t\t\tmove.ignoreAbility = true;\n\t\t},\n\t\tonResidualOrder: 27,\n\t\tonResidual(pokemon) {\n\t\t\tif (pokemon.baseSpecies.baseSpecies !== 'Zygarde' || pokemon.transformed || !pokemon.hp) return;\n\t\t\tif (pokemon.species.id === 'zygardecomplete' || pokemon.hp > pokemon.maxhp / 2) return;\n\t\t\tthis.add('-activate', pokemon, 'ability: Scyphozoa');\n\t\t\tpokemon.formeChange('Zygarde-Complete', this.effect, true);\n\t\t\tpokemon.baseMaxhp = Math.floor(Math.floor(\n\t\t\t\t2 * pokemon.species.baseStats['hp'] + pokemon.set.ivs['hp'] + Math.floor(pokemon.set.evs['hp'] / 4) + 100\n\t\t\t) * pokemon.level / 100 + 10);\n\t\t\tconst newMaxHP = pokemon.volatiles['dynamax'] ? (2 * pokemon.baseMaxhp) : pokemon.baseMaxhp;\n\t\t\tpokemon.hp = newMaxHP - (pokemon.maxhp - pokemon.hp);\n\t\t\tpokemon.maxhp = newMaxHP;\n\t\t\tthis.add('-heal', pokemon, pokemon.getHealth, '[silent]');\n\t\t},\n\t\tgen: 8,\n\t},\n\n\t// aegii\n\tsetthestage: {\n\t\tdesc: \"If this Pokemon is an Aegislash, it changes to Blade Forme before attempting to use an attacking move, and changes to Shield Forme before attempting to use King's Shield. This Pokemon's moves that match one of its types have a same-type attack bonus (STAB) of 2 instead of 1.5. On switch-in, this Pokemon selects a physical or special set.\",\n\t\tshortDesc: \"Stance Change + Adaptability; on switch-in, selects physical or special set.\",\n\t\tisPermanent: true,\n\t\tonSwitchIn(pokemon) {\n\t\t\tif (pokemon.species.baseSpecies !== 'Aegislash') return;\n\t\t\tconst forme = this.randomChance(1, 2) ? 'aegii-Alt' : 'aegii';\n\t\t\tchangeSet(this, pokemon, ssbSets[forme]);\n\t\t\tconst setType = pokemon.moves.includes('shadowball') ? 'specially' : 'physically';\n\t\t\tthis.add('-message', `aegii currently has a ${setType} oriented set.`);\n\t\t},\n\t\tonModifyMove(move, attacker, defender) {\n\t\t\tmove.stab = 2;\n\t\t\tif (attacker.species.baseSpecies !== 'Aegislash' || attacker.transformed) return;\n\t\t\tif (move.category === 'Status' && move.id !== 'kingsshield' && move.id !== 'reset') return;\n\t\t\tconst targetForme = (move.id === 'kingsshield' || move.id === 'reset' ? 'Aegislash' : 'Aegislash-Blade');\n\t\t\tif (attacker.species.name !== targetForme) attacker.formeChange(targetForme);\n\t\t},\n\t\tname: \"Set the Stage\",\n\t\tgen: 8,\n\t},\n\n\t// Aeonic\n\tarsene: {\n\t\tdesc: \"On switch-in, this Pokemon summons Sandstorm. If Sandstorm is active, this Pokemon's Speed is doubled. This Pokemon takes no damage from Sandstorm.\",\n\t\tshortDesc: \"Sand Stream + Sand Rush.\",\n\t\tname: \"Arsene\",\n\t\tonStart(source) {\n\t\t\tthis.field.setWeather('sandstorm');\n\t\t},\n\t\tonModifySpe(spe, pokemon) {\n\t\t\tif (this.field.isWeather('sandstorm')) {\n\t\t\t\treturn this.chainModify(2);\n\t\t\t}\n\t\t},\n\t\tonImmunity(type) {\n\t\t\tif (type === 'sandstorm') return false;\n\t\t},\n\t\tgen: 8,\n\t},\n\n\t// Aethernum\n\trainyseason: {\n\t\tdesc: \"On switch-in, this Pokemon summons Rain Dance. If Rain Dance or Heavy Rain is active, this Pokemon has doubled Speed, collects a raindrop, and restores 1/8 of its maximum HP, rounded down, at the end of each turn. If this Pokemon is holding Big Root, it will restore 1/6 of its maximum HP, rounded down, at the end of the turn. If this Pokemon is holding Utility Umbrella, its HP does not get restored and it does not collect raindrops. Each raindrop raises this Pokemon's Defense and Special Defense by 1 stage while it is collected.\",\n\t\tshortDesc: \"Drizzle + Swift Swim. Restore HP if raining. Collect raindrops.\",\n\t\tname: \"Rainy Season\",\n\t\tisPermanent: true,\n\t\tonStart(source) {\n\t\t\tfor (const action of this.queue) {\n\t\t\t\tif (action.choice === 'runPrimal' && action.pokemon === source && source.species.id === 'kyogre') return;\n\t\t\t\tif (action.choice !== 'runSwitch' && action.choice !== 'runPrimal') break;\n\t\t\t}\n\t\t\tthis.field.setWeather('raindance');\n\t\t},\n\t\tonWeather(target, source, effect) {\n\t\t\tif (target.hasItem('utilityumbrella')) return;\n\t\t\tif (['raindance', 'primordialsea'].includes(effect.id)) {\n\t\t\t\tthis.heal(target.baseMaxhp / (target.hasItem('bigroot') ? 6 : 8));\n\t\t\t\ttarget.addVolatile('raindrop');\n\t\t\t}\n\t\t},\n\t\tonModifySpe(spe, pokemon) {\n\t\t\tif (['raindance', 'primordialsea'].includes(pokemon.effectiveWeather())) {\n\t\t\t\treturn this.chainModify(2);\n\t\t\t}\n\t\t},\n\t\tgen: 8,\n\t},\n\n\t// Akir\n\tfortifications: {\n\t\tdesc: \"Pokemon making contact with this Pokemon lose 1/8 of their maximum HP, rounded down. At the end of every turn, this Pokemon Restores 1/16 of its max HP.\",\n\t\tshortDesc: \"Foe loses 1/8 HP if makes contact; Restores 1/16 of its max HP every turn.\",\n\t\tonDamagingHitOrder: 1,\n\t\tonDamagingHit(damage, target, source, move) {\n\t\t\tif (this.checkMoveMakesContact(move, source, target, true)) {\n\t\t\t\tthis.damage(source.baseMaxhp / 8, source, target);\n\t\t\t}\n\t\t},\n\t\tonResidual(pokemon) {\n\t\t\tthis.heal(pokemon.baseMaxhp / 16);\n\t\t},\n\t\tname: \"Fortifications\",\n\t\tgen: 8,\n\t},\n\n\t// Alpha\n\ticeage: {\n\t\tdesc: \"The weather becomes an extremely heavy hailstorm that prevents damaging Steel-type moves from executing, causes Ice-type moves to be 50% stronger, causes all non-Ice-type Pokemon on the opposing side to take 1/8 damage from hail, and causes all moves to have a 10% chance to freeze. This weather bypasses Magic Guard and Overcoat. This weather remains in effect until the 3 turns are up, or the weather is changed by Delta Stream, Desolate Land, or Primordial Sea.\",\n\t\tshortDesc: \"Weather: Steel fail. 1.5x Ice.\",\n\t\tonStart(source) {\n\t\t\tthis.field.setWeather('heavyhailstorm');\n\t\t},\n\t\tonAnySetWeather(target, source, weather) {\n\t\t\tif (this.field.getWeather().id === 'heavyhailstorm' && !STRONG_WEATHERS.includes(weather.id)) return false;\n\t\t},\n\t\tonEnd(pokemon) {\n\t\t\tif (this.field.weatherState.source !== pokemon) return;\n\t\t\tfor (const target of this.getAllActive()) {\n\t\t\t\tif (target === pokemon) continue;\n\t\t\t\tif (target.hasAbility('iceage')) {\n\t\t\t\t\tthis.field.weatherState.source = target;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.field.clearWeather();\n\t\t},\n\t\tname: \"Ice Age\",\n\t\tgen: 8,\n\t},\n\n\t// Annika\n\toverprotective: {\n\t\tdesc: \"If this Pokemon is the last unfainted team member, its Speed is raised by 1 stage.\",\n\t\tshortDesc: \"+1 Speed on switch-in if all other team members have fainted.\",\n\t\tonSwitchIn(pokemon) {\n\t\t\tif (pokemon.side.pokemonLeft === 1) this.boost({spe: 1});\n\t\t},\n\t\tname: \"Overprotective\",\n\t\tgen: 8,\n\t},\n\n\t// A Quag To The Past\n\tcarefree: {\n\t\tdesc: \"This Pokemon blocks certain status moves and instead uses the move against the original user. This Pokemon ignores other Pokemon's Attack, Special Attack, and accuracy stat stages when taking damage, and ignores other Pokemon's Defense, Special Defense, and evasiveness stat stages when dealing damage.\",\n\t\tshortDesc: \"Magic Bounce + Unaware.\",\n\t\tonAnyModifyBoost(boosts, pokemon) {\n\t\t\tconst unawareUser = this.effectState.target;\n\t\t\tif (unawareUser === pokemon) return;\n\t\t\tif (unawareUser === this.activePokemon && pokemon === this.activeTarget) {\n\t\t\t\tboosts['def'] = 0;\n\t\t\t\tboosts['spd'] = 0;\n\t\t\t\tboosts['evasion'] = 0;\n\t\t\t}\n\t\t\tif (pokemon === this.activePokemon && unawareUser === this.activeTarget) {\n\t\t\t\tboosts['atk'] = 0;\n\t\t\t\tboosts['def'] = 0;\n\t\t\t\tboosts['spa'] = 0;\n\t\t\t\tboosts['spd'] = 0;\n\t\t\t\tboosts['accuracy'] = 0;\n\t\t\t}\n\t\t},\n\t\tonTryHitPriority: 1,\n\t\tonTryHit(target, source, move) {\n\t\t\tif (target === source || move.hasBounced || !move.flags['reflectable']) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst newMove = this.dex.getActiveMove(move.id);\n\t\t\tnewMove.hasBounced = true;\n\t\t\tnewMove.pranksterBoosted = false;\n\t\t\tthis.add('-ability', target, 'Carefree');\n\t\t\tthis.actions.useMove(newMove, target, source);\n\t\t\treturn null;\n\t\t},\n\t\tonAllyTryHitSide(target, source, move) {\n\t\t\tif (target.isAlly(source) || move.hasBounced || !move.flags['reflectable']) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst newMove = this.dex.getActiveMove(move.id);\n\t\t\tnewMove.hasBounced = true;\n\t\t\tnewMove.pranksterBoosted = false;\n\t\t\tthis.add('-ability', target, 'Carefree');\n\t\t\tthis.actions.useMove(newMove, this.effectState.target, source);\n\t\t\treturn null;\n\t\t},\n\t\tcondition: {\n\t\t\tduration: 1,\n\t\t},\n\t\tname: \"Carefree\",\n\t\tgen: 8,\n\t},\n\n\t// Arby\n\twavesurge: {\n\t\tdesc: \"On switch-in, this Pokemon summons Wave Terrain for 5 turns. During the effect, the accuracy of Water-type moves is multiplied by 1.2, all current entry hazards are removed, and no entry hazards can be set.\",\n\t\tshortDesc: \"On switch-in, 5 turns: no hazards; Water move acc 1.2x.\",\n\t\tonStart(source) {\n\t\t\tthis.field.setTerrain('waveterrain');\n\t\t},\n\t\tname: \"Wave Surge\",\n\t\tgen: 8,\n\t},\n\n\t// Archas\n\tindomitable: {\n\t\tdesc: \"This Pokemon cures itself if it is confused or has a major status condition. Single use.\",\n\t\tonUpdate(pokemon) {\n\t\t\tif ((pokemon.status || pokemon.volatiles['confusion']) && !this.effectState.indomitableActivated) {\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Indomitable');\n\t\t\t\tpokemon.cureStatus();\n\t\t\t\tpokemon.removeVolatile('confusion');\n\t\t\t\tthis.effectState.indomitableActivated = true;\n\t\t\t}\n\t\t},\n\t\tname: \"Indomitable\",\n\t\tgen: 8,\n\t},\n\n\t// biggie\n\tsuperarmor: {\n\t\tdesc: \"Reduces damage taken from physical moves by 25% if the user has not yet attacked.\",\n\t\tonSourceModifyDamage(damage, source, target, move) {\n\t\t\tif (this.queue.willMove(target) && move.category === 'Physical') {\n\t\t\t\treturn this.chainModify(0.75);\n\t\t\t}\n\t\t},\n\t\tname: \"Super Armor\",\n\t\tgen: 8,\n\t},\n\n\t// Billo\n\tproofpolicy: {\n\t\tdesc: \"Pokemon making contact with this Pokemon have the effects of Yawn, Taunt, and Torment applied to them.\",\n\t\tshortDesc: \"Upon contact, opposing Pokemon is made drowsy and applies Taunt + Torment.\",\n\t\tonDamagingHit(damage, target, source, move) {\n\t\t\tif (this.checkMoveMakesContact(move, source, target, true)) {\n\t\t\t\tsource.addVolatile('taunt', target);\n\t\t\t\tsource.addVolatile('yawn', target);\n\t\t\t\tsource.addVolatile('torment', target);\n\t\t\t}\n\t\t},\n\t\tname: \"Proof Policy\",\n\t\tgen: 8,\n\t},\n\n\t// Brandon\n\tbanesurge: {\n\t\tdesc: \"On switch-in, this Pokemon summons Bane Terrain for 5 turns. For the duration of the effect, all Pokemon use their weaker offensive stat for all attacks. The move category used does not change.\",\n\t\tshortDesc: \"On switch-in, 5 turns: all Pokemon use weaker offensive stat.\",\n\t\tonStart(source) {\n\t\t\tthis.field.setTerrain('baneterrain');\n\t\t},\n\t\tname: \"Bane Surge\",\n\t\tgen: 8,\n\t},\n\n\t// brouha\n\tturbulence: {\n\t\tdesc: \"While this Pokemon is on the field, all entry hazards and terrains are removed at the end of each turn, non-Flying-type Pokemon lose 6% of their HP, rounded down, at the end of each turn.\",\n\t\tshortDesc: \"End of each turn: clears terrain/hazards, non-Flying lose 6% HP.\",\n\t\tonStart(source) {\n\t\t\tthis.field.setWeather('turbulence');\n\t\t},\n\t\tonAnySetWeather(target, source, weather) {\n\t\t\tif (this.field.getWeather().id === 'turbulence' && !STRONG_WEATHERS.includes(weather.id)) return false;\n\t\t},\n\t\tonEnd(pokemon) {\n\t\t\tif (this.field.weatherState.source !== pokemon) return;\n\t\t\tfor (const target of this.getAllActive()) {\n\t\t\t\tif (target === pokemon) continue;\n\t\t\t\tif (target.hasAbility('turbulence')) {\n\t\t\t\t\tthis.field.weatherState.source = target;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.field.clearWeather();\n\t\t},\n\t\tname: \"Turbulence\",\n\t\tgen: 8,\n\t},\n\n\t// Buffy\n\tspeedcontrol: {\n\t\tonStart(pokemon) {\n\t\t\tthis.boost({spe: 1}, pokemon);\n\t\t},\n\t\tdesc: \"On switch-in, this Pokemon's Speed is raised by 1 stage.\",\n\t\tname: \"Speed Control\",\n\t\tgen: 8,\n\t},\n\n\t// cant say\n\tragequit: {\n\t\tdesc: \"If a Pokemon with this ability uses a move that misses or fails, the Pokemon faints and reduces the foe's Attack and Special Attack by 2 stages\",\n\t\tshortDesc: \"If move misses or fails, use Memento.\",\n\t\tname: \"Rage Quit\",\n\t\tonAfterMove(pokemon, target, move) {\n\t\t\tif (pokemon.moveThisTurnResult === false) {\n\t\t\t\tthis.add('-ability', pokemon, 'Rage Quit');\n\t\t\t\tpokemon.faint();\n\t\t\t\tif (pokemon.side.foe.active[0]) {\n\t\t\t\t\tthis.boost({atk: -2, spa: -2}, pokemon.side.foe.active[0], pokemon, null, true);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tgen: 8,\n\t},\n\n\t// Celine\n\tguardianarmor: {\n\t\tdesc: \"On switch-in, this Pokemon's Defense and Special Defense are raised by 2 stages.\",\n\t\tname: \"Guardian Armor\",\n\t\tonStart(pokemon) {\n\t\t\tthis.boost({def: 2, spd: 2}, pokemon);\n\t\t},\n\t\tgen: 8,\n\t},\n\n\t// drampa's grandpa\n\toldmanpa: {\n\t\tdesc: \"This Pokemon's sound-based moves have their power multiplied by 1.3. This Pokemon takes halved damage from sound-based moves. This Pokemon ignores other Pokemon's Attack, Special Attack, and accuracy stat stages when taking damage, and ignores other Pokemon's Defense, Special Defense, and evasiveness stat stages when dealing damage. Upon switching in, this Pokemon's Defense and Special Defense are raised by 1 stage.\",\n\t\tshortDesc: \"Effects of Punk Rock + Unaware. On switch-in, boosts Def and Sp. Def by 1.\",\n\t\tname: \"Old Manpa\",\n\t\tonBasePowerPriority: 7,\n\t\tonBasePower(basePower, attacker, defender, move) {\n\t\t\tif (move.flags['sound']) {\n\t\t\t\tthis.debug('Old Manpa boost');\n\t\t\t\treturn this.chainModify([5325, 4096]);\n\t\t\t}\n\t\t},\n\t\tonSourceModifyDamage(damage, source, target, move) {\n\t\t\tif (move.flags['sound']) {\n\t\t\t\tthis.debug('Old Manpa weaken');\n\t\t\t\treturn this.chainModify(0.5);\n\t\t\t}\n\t\t},\n\t\tonAnyModifyBoost(boosts, pokemon) {\n\t\t\tconst unawareUser = this.effectState.target;\n\t\t\tif (unawareUser === pokemon) return;\n\t\t\tif (unawareUser === this.activePokemon && pokemon === this.activeTarget) {\n\t\t\t\tboosts['def'] = 0;\n\t\t\t\tboosts['spd'] = 0;\n\t\t\t\tboosts['evasion'] = 0;\n\t\t\t}\n\t\t\tif (pokemon === this.activePokemon && unawareUser === this.activeTarget) {\n\t\t\t\tboosts['atk'] = 0;\n\t\t\t\tboosts['def'] = 0;\n\t\t\t\tboosts['spa'] = 0;\n\t\t\t\tboosts['spd'] = 0;\n\t\t\t\tboosts['accuracy'] = 0;\n\t\t\t}\n\t\t},\n\t\tonStart(pokemon) {\n\t\t\tthis.boost({def: 1, spd: 1});\n\t\t},\n\t\tgen: 8,\n\t},\n\n\t// dream\n\tgreedpunisher: {\n\t\tdesc: \"This Pokemon can only be damaged by direct attacks. On switch-in, this Pokemon's stats are boosted based on the number of hazards on the field. 1 random stat is raised if 1-2 hazards are up, and 2 random stats are raised if 3 or more hazards are up.\",\n\t\tshortDesc: \"On switch-in, boosts stats based on the number of hazards on this Pokemon's side.\",\n\t\tname: \"Greed Punisher\",\n\t\tonSwitchIn(pokemon) {\n\t\t\tconst side = pokemon.side;\n\t\t\tconst sideConditions = Object.keys(side.sideConditions);\n\t\t\tconst activeCount = sideConditions.length;\n\t\t\tconst stats: BoostID[] = [];\n\t\t\tconst exclude: string[] = ['accuracy', 'evasion'];\n\t\t\tfor (let x = 0; x < activeCount; x++) {\n\t\t\t\tlet stat: BoostID;\n\t\t\t\tfor (stat in pokemon.boosts) {\n\t\t\t\t\tif (pokemon.boosts[stat] < 6 && !exclude.includes(stat)) {\n\t\t\t\t\t\tstats.push(stat);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (stats.length) {\n\t\t\t\t\tconst randomStat = this.sample(stats);\n\t\t\t\t\tconst boost: SparseBoostsTable = {};\n\t\t\t\t\tboost[randomStat] = 1;\n\t\t\t\t\tthis.boost(boost, pokemon, pokemon);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tonDamage(damage, target, source, effect) {\n\t\t\tif (effect.id === 'heavyhailstorm') return;\n\t\t\tif (effect.effectType !== 'Move') {\n\t\t\t\tif (effect.effectType === 'Ability') this.add('-activate', source, 'ability: ' + effect.name);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\t\tgen: 8,\n\t},\n\n\t// Emeri\n\tdrakeskin: {\n\t\tdesc: \"This Pokemon's Normal-type moves become Dragon-type moves and have their power multiplied by 1.2. This effect comes after other effects that change a move's type, but before Ion Deluge and Electrify's effects.\",\n\t\tshortDesc: \"This Pokemon's Normal-type moves become Dragon type and have 1.2x power.\",\n\t\tname: \"Drake Skin\",\n\t\tonModifyTypePriority: -1,\n\t\tonModifyType(move, pokemon) {\n\t\t\tconst noModifyType = [\n\t\t\t\t'judgment', 'multiattack', 'naturalgift', 'revelationdance', 'technoblast', 'terrainpulse', 'weatherball',\n\t\t\t];\n\t\t\tif (move.type === 'Normal' && !noModifyType.includes(move.id) && !(move.isZ && move.category !== 'Status')) {\n\t\t\t\tmove.type = 'Dragon';\n\t\t\t\tmove.typeChangerBoosted = this.effect;\n\t\t\t}\n\t\t},\n\t\tonBasePowerPriority: 23,\n\t\tonBasePower(basePower, pokemon, target, move) {\n\t\t\tif (move.typeChangerBoosted === this.effect) return this.chainModify([4915, 4096]);\n\t\t},\n\t\tgen: 8,\n\t},\n\n\t// EpicNikolai\n\tdragonheart: {\n\t\tdesc: \"Once per battle, when this Pokemon's HP is at or below 25% of its max HP, this Pokemon heals 50% of its max HP.\",\n\t\tshortDesc: \"Once per battle, heals 50% when 25% or lower.\",\n\t\tname: \"Dragon Heart\",\n\t\tonUpdate(pokemon) {\n\t\t\tif (pokemon.hp > 0 && pokemon.hp < pokemon.maxhp / 4 && !this.effectState.dragonheart) {\n\t\t\t\tthis.effectState.dragonheart = true;\n\t\t\t\tthis.heal(pokemon.maxhp / 2);\n\t\t\t}\n\t\t},\n\t\tgen: 8,\n\t},\n\n\t// estarossa\n\tsandsoftime: {\n\t\tdesc: \"On switch-in, this Pokemon summons Sandstorm. If Sandstorm is active, this Pokemon's Ground-, Rock-, and Steel-type attacks have their power multiplied by 1.3. This Pokemon takes no damage from Sandstorm.\",\n\t\tshortDesc: \"Sand Stream + Sand Force.\",\n\t\tname: \"Sands of Time\",\n\t\tonStart(source) {\n\t\t\tthis.field.setWeather('sandstorm');\n\t\t},\n\t\tonImmunity(type, pokemon) {\n\t\t\tif (type === 'sandstorm') return false;\n\t\t},\n\t\tonBasePower(basePower, attacker, defender, move) {\n\t\t\tif (this.field.isWeather('sandstorm')) {\n\t\t\t\tif (move.type === 'Rock' || move.type === 'Ground' || move.type === 'Steel') {\n\t\t\t\t\tthis.debug('Sands of Time boost');\n\t\t\t\t\treturn this.chainModify([5325, 4096]);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tgen: 8,\n\t},\n\n\t// fart\n\tbipolar: {\n\t\tdesc: \"If this Pokemon is a Kartana, then when it switches in, it changes to two random types and gets corresponding STAB attacks.\",\n\t\tshortDesc: \"Kartana: User gains 2 random types and STAB moves on switch-in.\",\n\t\tname: \"Bipolar\",\n\t\tisPermanent: true,\n\t\tonSwitchIn(pokemon) {\n\t\t\tif (pokemon.species.baseSpecies !== 'Kartana') return;\n\t\t\tconst typeMap: {[key: string]: string} = {\n\t\t\t\tNormal: \"Return\",\n\t\t\t\tFighting: \"Sacred Sword\",\n\t\t\t\tFlying: \"Drill Peck\",\n\t\t\t\tPoison: \"Poison Jab\",\n\t\t\t\tGround: \"Earthquake\",\n\t\t\t\tRock: \"Stone Edge\",\n\t\t\t\tBug: \"Lunge\",\n\t\t\t\tGhost: \"Shadow Bone\",\n\t\t\t\tSteel: \"Iron Head\",\n\t\t\t\tElectric: \"Zing Zap\",\n\t\t\t\tPsychic: \"Psychic Fangs\",\n\t\t\t\tIce: \"Icicle Crash\",\n\t\t\t\tDragon: \"Dual Chop\",\n\t\t\t\tDark: \"Jaw Lock\",\n\t\t\t\tFairy: \"Play Rough\",\n\t\t\t};\n\t\t\tconst types = Object.keys(typeMap);\n\t\t\tthis.prng.shuffle(types);\n\t\t\tconst newTypes = [types[0], types[1]];\n\t\t\tthis.add('-start', pokemon, 'typechange', newTypes.join('/'));\n\t\t\tpokemon.setType(newTypes);\n\t\t\tlet move = this.dex.moves.get(typeMap[newTypes[0]]);\n\t\t\tpokemon.moveSlots[3] = pokemon.moveSlots[1];\n\t\t\tpokemon.moveSlots[1] = {\n\t\t\t\tmove: move.name,\n\t\t\t\tid: move.id,\n\t\t\t\tpp: move.pp,\n\t\t\t\tmaxpp: move.pp,\n\t\t\t\ttarget: move.target,\n\t\t\t\tdisabled: false,\n\t\t\t\tused: false,\n\t\t\t\tvirtual: true,\n\t\t\t};\n\t\t\tmove = this.dex.moves.get(typeMap[newTypes[1]]);\n\t\t\tpokemon.moveSlots[2] = {\n\t\t\t\tmove: move.name,\n\t\t\t\tid: move.id,\n\t\t\t\tpp: move.pp,\n\t\t\t\tmaxpp: move.pp,\n\t\t\t\ttarget: move.target,\n\t\t\t\tdisabled: false,\n\t\t\t\tused: false,\n\t\t\t\tvirtual: true,\n\t\t\t};\n\t\t},\n\t\tgen: 8,\n\t},\n\n\t// Finland\n\twindingsong: {\n\t\tdesc: \"If this Pokemon's species is Alcremie, it alternates one of its moves between two different options at the end of each turn, depending on the forme of Alcremie.\",\n\t\tshortDesc: \"Alcremie: alternates between moves each turn.\",\n\t\tname: \"Winding Song\",\n\t\tisPermanent: true,\n\t\tonResidual(pokemon) {\n\t\t\tif (pokemon.species.baseSpecies !== 'Alcremie') return;\n\t\t\tlet coolMoves = [];\n\t\t\tif (pokemon.species.forme === 'Lemon-Cream') {\n\t\t\t\tcoolMoves = ['Reflect', 'Light Screen'];\n\t\t\t} else if (pokemon.species.forme === 'Ruby-Swirl') {\n\t\t\t\tcoolMoves = ['Refresh', 'Destiny Bond'];\n\t\t\t} else if (pokemon.species.forme === 'Mint-Cream') {\n\t\t\t\tcoolMoves = ['Light of Ruin', 'Sparkling Aria'];\n\t\t\t} else {\n\t\t\t\tcoolMoves = ['Infestation', 'Whirlwind'];\n\t\t\t}\n\t\t\tlet oldMove;\n\t\t\tlet move;\n\t\t\tif (pokemon.moves.includes(this.toID(coolMoves[0]))) {\n\t\t\t\toldMove = this.toID(coolMoves[0]);\n\t\t\t\tmove = this.dex.moves.get(coolMoves[1]);\n\t\t\t} else if (pokemon.moves.includes(this.toID(coolMoves[1]))) {\n\t\t\t\toldMove = this.toID(coolMoves[1]);\n\t\t\t\tmove = this.dex.moves.get(coolMoves[0]);\n\t\t\t} else {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!oldMove || !move) return;\n\t\t\tconst sketchIndex = pokemon.moves.indexOf(oldMove);\n\t\t\tif (sketchIndex < 0) return false;\n\t\t\tconst sketchedMove = {\n\t\t\t\tmove: move.name,\n\t\t\t\tid: move.id,\n\t\t\t\tpp: (move.pp * 8 / 5),\n\t\t\t\tmaxpp: (move.pp * 8 / 5),\n\t\t\t\ttarget: move.target,\n\t\t\t\tdisabled: false,\n\t\t\t\tused: false,\n\t\t\t};\n\t\t\tpokemon.moveSlots[sketchIndex] = sketchedMove;\n\t\t\tpokemon.baseMoveSlots[sketchIndex] = sketchedMove;\n\t\t\tthis.add('-message', `Finland changed its move ${this.dex.moves.get(oldMove).name} to ${move.name}!`);\n\t\t},\n\t\tgen: 8,\n\t},\n\n\t// frostyicelad\n\ticeshield: {\n\t\tdesc: \"This Pokemon can only be damaged by direct attacks. This Pokemon cannot lose its held item due to another Pokemon's attack.\",\n\t\tshortDesc: \"Can only be damaged by direct attacks. Cannot lose its held item.\",\n\t\tname: \"Ice Shield\",\n\t\tonDamage(damage, target, source, effect) {\n\t\t\tif (effect.effectType !== 'Move') {\n\t\t\t\tif (effect.effectType === 'Ability') this.add('-activate', source, 'ability: ' + effect.name);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\t\tonTakeItem(item, pokemon, source) {\n\t\t\tif (this.suppressingAbility(pokemon) || !pokemon.hp || pokemon.item === 'stickybarb') return;\n\t\t\tif (!this.activeMove) throw new Error(\"Battle.activeMove is null\");\n\t\t\tif ((source && source !== pokemon) || this.activeMove.id === 'knockoff') {\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Ice Shield');\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\t\tgen: 8,\n\t},\n\n\t// gallant's pear\n\tarmortime: {\n\t\tname: \"Armor Time\",\n\t\tdesc: \"If this Pokemon uses a status move or King Giri Giri Slash, it changes its typing and boosts one of its stats by 1 stage randomly between four options: Bug/Fire type with a Special Attack boost, Bug/Steel type with a Defense boost, Bug/Rock type with a Special Defense boost, and Bug/Electric type with a Speed boost.\",\n\t\tshortDesc: \"On use of status or King Giri Giri Slash, the user changes type and gets a boost.\",\n\t\tisPermanent: true,\n\t\tonBeforeMove(source, target, move) {\n\t\t\tif (move.category !== \"Status\" && move.id !== \"kinggirigirislash\") return;\n\t\t\tconst types = ['Fire', 'Steel', 'Rock', 'Electric'];\n\t\t\tconst type = ['Bug', this.sample(types)];\n\t\t\tif (!source.setType(type)) return;\n\t\t\tthis.add('-start', source, 'typechange', type.join('/'), '[from] ability: Armor Time');\n\t\t\tswitch (type[1]) {\n\t\t\tcase 'Fire':\n\t\t\t\tthis.add('-message', 'Armor Time: Fire Armor!');\n\t\t\t\tthis.boost({spa: 1}, source);\n\t\t\t\tbreak;\n\t\t\tcase 'Steel':\n\t\t\t\tthis.add('-message', 'Armor Time: Steel Armor!');\n\t\t\t\tthis.boost({def: 1}, source);\n\t\t\t\tbreak;\n\t\t\tcase 'Rock':\n\t\t\t\tthis.add('-message', 'Armor Time: Rock Armor!');\n\t\t\t\tthis.boost({spd: 1}, source);\n\t\t\t\tbreak;\n\t\t\tcase 'Electric':\n\t\t\t\tthis.add('-message', 'Armor Time: Electric Armor!');\n\t\t\t\tthis.boost({spe: 1}, source);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t},\n\t\tgen: 8,\n\t},\n\n\t// Gimmick\n\tic3peak: {\n\t\tdesc: \"This Pokemon's Normal-type moves become Ice-type moves and have their power multiplied by 1.2. This Pokemon's moves, if they are not affected by Refrigerate, have their Base Power multiplied by the number of consecutive turns the move is used by this Pokemon.\",\n\t\tshortDesc: \"Refrigerate; Echoed Voice modifier on non-Refrigerate moves.\",\n\t\tname: \"IC3PEAK\",\n\t\tonModifyTypePriority: -1,\n\t\tonModifyType(move, pokemon) {\n\t\t\tconst noModifyType = [\n\t\t\t\t'judgment', 'multiattack', 'naturalgift', 'revelationdance', 'technoblast', 'terrainpulse', 'weatherball',\n\t\t\t];\n\t\t\tif (move.type === 'Normal' && !noModifyType.includes(move.id) && !(move.isZ && move.category !== 'Status')) {\n\t\t\t\tmove.type = 'Ice';\n\t\t\t\tmove.typeChangerBoosted = this.effect;\n\t\t\t}\n\t\t},\n\t\tonBasePowerPriority: 23,\n\t\tonBasePower(basePower, pokemon, target, move) {\n\t\t\tif (move.typeChangerBoosted === this.effect) return this.chainModify([4915, 4096]);\n\t\t},\n\t\tonModifyMovePriority: -2,\n\t\tonModifyMove(move, attacker) {\n\t\t\tif (move.typeChangerBoosted === this.effect) return;\n\t\t\tmove.onTry = function () {\n\t\t\t\tthis.field.addPseudoWeather('echoedvoiceclone');\n\t\t\t\tthis.field.pseudoWeather.echoedvoiceclone.lastmove = move.name;\n\t\t\t};\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-shadow\n\t\t\tmove.basePowerCallback = function (pokemon, target, move) {\n\t\t\t\tif (this.field.pseudoWeather.echoedvoiceclone) {\n\t\t\t\t\tif (this.field.pseudoWeather.echoedvoiceclone.lastmove === move.name) {\n\t\t\t\t\t\treturn move.basePower * this.field.pseudoWeather.echoedvoiceclone.multiplier;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.field.removePseudoWeather('echoedvoiceclone');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn move.basePower;\n\t\t\t};\n\t\t},\n\t\tgen: 8,\n\t},\n\n\t// GMars\n\tcapsulearmor: {\n\t\tdesc: \"While in Minior-Meteor forme, this Pokemon cannot be affected by major status conditions and is immune to critical hits. This ability cannot be ignored by Moongeist Beam, Sunsteel Strike, Mold Breaker, Teravolt, or Turboblaze.\",\n\t\tshortDesc: \"Minior-Meteor: Immune to crits and status\",\n\t\tname: \"Capsule Armor\",\n\t\tisPermanent: true,\n\t\tisBreakable: false,\n\t\tonCriticalHit: false,\n\t\tonSetStatus(status, target, source, effect) {\n\t\t\tif (target.species.id !== 'miniormeteor' || target.transformed) return;\n\t\t\tif ((effect as Move)?.status) {\n\t\t\t\tthis.add('-immune', target, '[from] ability: Capsule Armor');\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tonTryAddVolatile(status, target) {\n\t\t\tif (target.species.id !== 'miniormeteor' || target.transformed) return;\n\t\t\tif (status.id !== 'yawn') return;\n\t\t\tthis.add('-immune', target, '[from] ability: Capsule Armor');\n\t\t\treturn null;\n\t\t},\n\t},\n\n\t// grimAuxiliatrix\n\taluminumalloy: {\n\t\tdesc: \"This Pokemon restores 1/3 of its maximum HP, rounded down, when it switches out, and other Pokemon cannot lower this Pokemon's stat stages. -1 Speed, +1 Def/Sp.Def when hit with a Water-type attacking move, switching into rain or starting rain while this Pokemon is on the field.\",\n\t\tshortDesc: \"Regenerator+Clear Body.+1 def/spd,-1 spe in rain/hit by water\",\n\t\tname: \"Aluminum Alloy\",\n\t\tonSwitchIn(pokemon) {\n\t\t\tif (['raindance', 'primordialsea'].includes(pokemon.effectiveWeather())) {\n\t\t\t\tthis.boost({def: 1, spd: 1, spe: -1}, pokemon, pokemon);\n\t\t\t\tthis.add('-message', `${pokemon.name} is rusting...`);\n\t\t\t}\n\t\t},\n\t\tonDamagingHit(damage, target, source, move) {\n\t\t\tif (move.type === 'Water') {\n\t\t\t\tthis.boost({def: 1, spd: 1, spe: -1}, target, target);\n\t\t\t\tthis.add('-message', `${target.name} is rusting...`);\n\t\t\t}\n\t\t},\n\t\tonWeatherChange() {\n\t\t\tconst pokemon = this.effectState.target;\n\t\t\tif (this.field.isWeather(['raindance', 'primordialsea'])) {\n\t\t\t\tthis.boost({def: 1, spd: 1, spe: -1}, pokemon, pokemon);\n\t\t\t\tthis.add('-message', `${pokemon.name} is rusting...`);\n\t\t\t}\n\t\t},\n\t\tonSwitchOut(pokemon) {\n\t\t\tpokemon.heal(pokemon.baseMaxhp / 3);\n\t\t},\n\t\tonTryBoost(boost, target, source, effect) {\n\t\t\tif (source && target === source) return;\n\t\t\tlet showMsg = false;\n\t\t\tlet i: BoostID;\n\t\t\tfor (i in boost) {\n\t\t\t\tif (boost[i]! < 0) {\n\t\t\t\t\tdelete boost[i];\n\t\t\t\t\tshowMsg = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (showMsg && !(effect as ActiveMove).secondaries && effect.id !== 'octolock') {\n\t\t\t\tthis.add(\"-fail\", target, \"unboost\", \"[from] ability: Aluminum Alloy\", \"[of] \" + target);\n\t\t\t}\n\t\t},\n\t\tgen: 8,\n\t},\n\n\t// HoeenHero\n\ttropicalcyclone: {\n\t\tdesc: \"On switch-in, this Pokemon summons Rain Dance. If Rain Dance or Heavy Rain is active, this Pokemon's Speed is doubled.\",\n\t\tshortDesc: \"Summons Rain. 2x Speed while rain is active.\",\n\t\tname: \"Tropical Cyclone\",\n\t\tonStart(source) {\n\t\t\tthis.field.setWeather('raindance');\n\t\t},\n\t\tonModifySpe(spe, pokemon) {\n\t\t\tif (['raindance', 'primordialsea'].includes(pokemon.effectiveWeather())) {\n\t\t\t\treturn this.chainModify(2);\n\t\t\t}\n\t\t},\n\t\tgen: 8,\n\t},\n\n\t// Hydro\n\thydrostatic: {\n\t\tdesc: \"This Pokemon is immune to Water- and Electric-type moves and raises its Special Attack by 1 stage when hit by a Water- or Electric-type move. If this Pokemon is not the target of a single-target Water- or Electric-type move used by another Pokemon, this Pokemon redirects that move to itself if it is within the range of that move. This Pokemon's Water- and Electric-type moves have their accuracy multiplied by 1.3.\",\n\t\tshortDesc: \"Storm Drain + Lightning Rod. This Pokemon's Water/Electric moves have 1.3x acc.\",\n\t\tonSourceModifyAccuracyPriority: 9,\n\t\tonSourceModifyAccuracy(accuracy, source, target, move) {\n\t\t\tif (typeof accuracy !== 'number') return;\n\t\t\tif (!['Water', 'Electric'].includes(move.type)) return;\n\t\t\tthis.debug('hydrostatic - enhancing accuracy');\n\t\t\treturn accuracy * 1.3;\n\t\t},\n\t\tonTryHit(target, source, move) {\n\t\t\tif (target !== source && ['Water', 'Electric'].includes(move.type)) {\n\t\t\t\tif (!this.boost({spa: 1})) {\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Hydrostatic');\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\t},\n\t\tonAnyRedirectTarget(target, source, source2, move) {\n\t\t\tif (!['Water', 'Electric'].includes(move.type) || move.flags['pledgecombo']) return;\n\t\t\tconst redirectTarget = ['randomNormal', 'adjacentFoe'].includes(move.target) ? 'normal' : move.target;\n\t\t\tif (this.validTarget(this.effectState.target, source, redirectTarget)) {\n\t\t\t\tif (move.smartTarget) move.smartTarget = false;\n\t\t\t\tif (this.effectState.target !== target) {\n\t\t\t\t\tthis.add('-activate', this.effectState.target, 'ability: Hydrostatic');\n\t\t\t\t}\n\t\t\t\treturn this.effectState.target;\n\t\t\t}\n\t\t},\n\t\tname: \"Hydrostatic\",\n\t\tgen: 8,\n\t},\n\n\t// Inactive\n\tdragonsfury: {\n\t\tdesc: \"If this Pokemon has a non-volatile status condition, its Defense is multiplied by 1.5x and its HP is restored by 25% of damage it deals.\",\n\t\tshortDesc: \"If this Pokemon is statused, its Def is 1.5x and it heals for 25% of dmg dealt.\",\n\t\tonModifyDefPriority: 6,\n\t\tonModifyDef(def, pokemon) {\n\t\t\tif (pokemon.status) {\n\t\t\t\treturn this.chainModify(1.5);\n\t\t\t}\n\t\t},\n\t\tonModifyMove(move, attacker) {\n\t\t\tif (attacker.status) move.drain = [1, 4];\n\t\t},\n\t\tname: \"Dragon's Fury\",\n\t\tgen: 8,\n\t},\n\n\t// Iyarito\n\tpollodiablo: {\n\t\tdesc: \"This Pokemon's Special Attack is 1.5x, but it can only select the first move it executes.\",\n\t\tshortDesc: \"This Pokemon's Sp. Atk is 1.5x, but it can only select the first move it executes.\",\n\t\tname: \"Pollo Diablo\",\n\t\tonStart(pokemon) {\n\t\t\tpokemon.abilityState.choiceLock = \"\";\n\t\t},\n\t\tonBeforeMove(pokemon, target, move) {\n\t\t\tif (move.isZOrMaxPowered || move.id === 'struggle') return;\n\t\t\tif (pokemon.abilityState.choiceLock && pokemon.abilityState.choiceLock !== move.id) {\n\t\t\t\tthis.addMove('move', pokemon, move.name);\n\t\t\t\tthis.attrLastMove('[still]');\n\t\t\t\tthis.debug(\"Disabled by Pollo Diablo\");\n\t\t\t\tthis.add('-fail', pokemon);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\t\tonModifyMove(move, pokemon) {\n\t\t\tif (pokemon.abilityState.choiceLock || move.isZOrMaxPowered || move.id === 'struggle') return;\n\t\t\tpokemon.abilityState.choiceLock = move.id;\n\t\t},\n\t\tonModifySpAPriority: 1,\n\t\tonModifySpA(spa, pokemon) {\n\t\t\tif (pokemon.volatiles['dynamax']) return;\n\t\t\tthis.debug('Pollo Diablo Spa Boost');\n\t\t\treturn this.chainModify(1.5);\n\t\t},\n\t\tonDisableMove(pokemon) {\n\t\t\tif (!pokemon.abilityState.choiceLock) return;\n\t\t\tif (pokemon.volatiles['dynamax']) return;\n\t\t\tfor (const moveSlot of pokemon.moveSlots) {\n\t\t\t\tif (moveSlot.id !== pokemon.abilityState.choiceLock) {\n\t\t\t\t\tpokemon.disableMove(moveSlot.id, false, this.effectState.sourceEffect);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tonEnd(pokemon) {\n\t\t\tpokemon.abilityState.choiceLock = \"\";\n\t\t},\n\t\tgen: 8,\n\t},\n\n\t// Jett\n\tdeceiver: {\n\t\tdesc: \"This Pokemon's moves that match one of its types have a same-type attack bonus of 2 instead of 1.5. If this Pokemon is at full HP, it survives one hit with at least 1 HP.\",\n\t\tshortDesc: \"Adaptability + Sturdy.\",\n\t\tonModifyMove(move) {\n\t\t\tmove.stab = 2;\n\t\t},\n\t\tonTryHit(pokemon, target, move) {\n\t\t\tif (move.ohko) {\n\t\t\t\tthis.add('-immune', pokemon, '[from] ability: Deceiver');\n\t\t\t\treturn null;\n\t\t\t}\n\t\t},\n\t\tonDamagePriority: -100,\n\t\tonDamage(damage, target, source, effect) {\n\t\t\tif (target.hp === target.maxhp && damage >= target.hp && effect && effect.effectType === 'Move') {\n\t\t\t\tthis.add('-ability', target, 'Deceiver');\n\t\t\t\treturn target.hp - 1;\n\t\t\t}\n\t\t},\n\t\tname: \"Deceiver\",\n\t\tgen: 8,\n\t},\n\n\t// Jho\n\tvenomize: {\n\t\tdesc: \"This Pokemon's Normal-type moves become Poison-type moves and have their power multiplied by 1.2. This effect comes after other effects that change a move's type, but before Ion Deluge and Electrify's effects.\",\n\t\tshortDesc: \"This Pokemon's Normal-type moves become Poison type and have 1.2x power.\",\n\t\tonModifyTypePriority: -1,\n\t\tonModifyType(move, pokemon) {\n\t\t\tconst noModifyType = [\n\t\t\t\t'judgment', 'multiattack', 'naturalgift', 'revelationdance', 'technoblast', 'terrainpulse', 'weatherball',\n\t\t\t];\n\t\t\tif (move.type === 'Normal' && !noModifyType.includes(move.id) && !(move.isZ && move.category !== 'Status')) {\n\t\t\t\tmove.type = 'Poison';\n\t\t\t\tmove.typeChangerBoosted = this.effect;\n\t\t\t}\n\t\t},\n\t\tonBasePowerPriority: 23,\n\t\tonBasePower(basePower, pokemon, target, move) {\n\t\t\tif (move.typeChangerBoosted === this.effect) return this.chainModify([4915, 4096]);\n\t\t},\n\t\tname: \"Venomize\",\n\t\tgen: 8,\n\t},\n\n\t// Jordy\n\tdivinesandstorm: {\n\t\tdesc: \"On switch-in, this Pokemon summons Sandstorm. This Pokemon does not take recoil damage besides Struggle/Life Orb/crash damage.\",\n\t\tshortDesc: \"Sand Stream + Rock Head.\",\n\t\tname: \"Divine Sandstorm\",\n\t\tonDamage(damage, target, source, effect) {\n\t\t\tif (effect.id === 'recoil') {\n\t\t\t\tif (!this.activeMove) return;\n\t\t\t\tif (this.activeMove.id !== 'struggle') return null;\n\t\t\t}\n\t\t},\n\t\tonStart(pokemon) {\n\t\t\tthis.field.setWeather('sandstorm');\n\t\t},\n\t\tgen: 8,\n\t},\n\n\t// Kaiju Bunny\n\tsecondwind: {\n\t\tdesc: \"Once per battle, when this Pokemon's HP is at or below 25% of its max HP, this Pokemon heals 50% of its max HP.\",\n\t\tshortDesc: \"Once per battle, heals 50% when 25% or lower.\",\n\t\tname: \"Second Wind\",\n\t\tonUpdate(pokemon) {\n\t\t\tif (pokemon.hp > 0 && pokemon.hp < pokemon.maxhp / 4 && !this.effectState.dragonheart) {\n\t\t\t\tthis.effectState.dragonheart = true;\n\t\t\t\tthis.heal(pokemon.maxhp / 2);\n\t\t\t}\n\t\t},\n\t\tgen: 8,\n\t},\n\n\t// Kennedy\n\tfalsenine: {\n\t\tdesc: \"This Pokemon's type changes to match the type of the move it is about to use. This effect comes after all effects that change a move's type. This Pokemon's critical hit ratio is raised by 1 stage.\",\n\t\tshortDesc: \"Protean + Super Luck.\",\n\t\tonPrepareHit(source, target, move) {\n\t\t\tif (move.hasBounced) return;\n\t\t\tconst type = move.type;\n\t\t\tif (type && type !== '???' && source.getTypes().join() !== type) {\n\t\t\t\tif (!source.setType(type)) return;\n\t\t\t\tthis.add('-start', source, 'typechange', type, '[from] ability: False Nine');\n\t\t\t}\n\t\t},\n\t\tonModifyCritRatio(critRatio) {\n\t\t\treturn critRatio + 1;\n\t\t},\n\t\tname: \"False Nine\",\n\t\tgen: 8,\n\t},\n\n\t// Kev\n\tkingofatlantis: {\n\t\tdesc: \"On switch-in, this Pokemon summons Rain Dance for 5 turns, plus 1 additional turn for each Water-type teammate. This Pokemon also has the effects of Dry Skin.\",\n\t\tshortDesc: \"Drizzle + Dry Skin; +1 turn of rain for each Water-type teammate.\",\n\t\tonStart(source) {\n\t\t\tthis.field.setWeather('raindance', source);\n\t\t\t// See conditions.ts for weather modifications.\n\t\t},\n\t\tonTryHit(target, source, move) {\n\t\t\tif (target !== source && move.type === 'Water') {\n\t\t\t\tif (!this.heal(target.baseMaxhp / 4)) {\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: King of Atlantis');\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\t},\n\t\tonFoeBasePowerPriority: 17,\n\t\tonFoeBasePower(basePower, attacker, defender, move) {\n\t\t\tif (this.effectState.target !== defender) return;\n\t\t\tif (move.type === 'Fire') {\n\t\t\t\treturn this.chainModify(1.25);\n\t\t\t}\n\t\t},\n\t\tonWeather(target, source, effect) {\n\t\t\tif (target.hasItem('utilityumbrella')) return;\n\t\t\tif (effect.id === 'raindance' || effect.id === 'primordialsea') {\n\t\t\t\tthis.heal(target.baseMaxhp / 8);\n\t\t\t} else if (effect.id === 'sunnyday' || effect.id === 'desolateland') {\n\t\t\t\tthis.damage(target.baseMaxhp / 8, target, target);\n\t\t\t}\n\t\t},\n\t\tname: \"King of Atlantis\",\n\t\tgen: 8,\n\t},\n\n\t// KingSwordYT\n\tbambookingdom: {\n\t\tdesc: \"On switch-in, this Pokemon's Defense and Special Defense are raised by 1 stage. Attacking moves used by this Pokemon have their priority set to -7.\",\n\t\tshortDesc: \"+1 Def/SpD. -7 priority on attacks.\",\n\t\tname: \"Bamboo Kingdom\",\n\t\tonStart(pokemon) {\n\t\t\tthis.boost({def: 1, spd: 1}, pokemon);\n\t\t},\n\t\tonModifyPriority(priority, pokemon, target, move) {\n\t\t\tif (move?.category !== 'Status') return -7;\n\t\t},\n\t\tgen: 8,\n\t},\n\n\t// Kipkluif\n\tdegenerator: {\n\t\tdesc: \"While this Pokemon is active, foes that switch out lose 1/3 of their maximum HP, rounded down. This damage will never cause a Pokemon to faint, and will instead leave them at 1 HP.\",\n\t\tshortDesc: \"While this Pokemon is active, foes that switch out lose 1/3 of their maximum HP.\",\n\t\tonStart(pokemon) {\n\t\t\tpokemon.side.foe.addSideCondition('degeneratormod', pokemon);\n\t\t\tconst data = pokemon.side.foe.getSideConditionData('degeneratormod');\n\t\t\tif (!data.sources) {\n\t\t\t\tdata.sources = [];\n\t\t\t}\n\t\t\tdata.sources.push(pokemon);\n\t\t},\n\t\tonEnd(pokemon) {\n\t\t\tpokemon.side.foe.removeSideCondition('degeneratormod');\n\t\t},\n\t\tname: \"Degenerator\",\n\t\tgen: 8,\n\t},\n\n\t// Lionyx\n\ttension: {\n\t\tdesc: \"On switch-in, the Pokemon builds up tension, making the next attack always hit and always be a critical hit.\",\n\t\tshortDesc: \"On switch-in, the Pokemon's next attack will always be a critical hit and will always hit.\",\n\t\tname: \"Tension\",\n\t\tonStart(pokemon) {\n\t\t\tthis.add('-ability', pokemon, 'Tension');\n\t\t\tpokemon.addVolatile('tension');\n\t\t},\n\t\tcondition: {\n\t\t\tonStart(pokemon, source, effect) {\n\t\t\t\tif (effect && (['imposter', 'psychup', 'transform'].includes(effect.id))) {\n\t\t\t\t\tthis.add('-start', pokemon, 'move: Tension', '[silent]');\n\t\t\t\t} else {\n\t\t\t\t\tthis.add('-start', pokemon, 'move: Tension');\n\t\t\t\t}\n\t\t\t\tthis.add(\"-message\", `${pokemon.name} has built up tension!`);\n\t\t\t},\n\t\t\tonModifyCritRatio(critRatio) {\n\t\t\t\treturn 5;\n\t\t\t},\n\t\t\tonAnyInvulnerability(target, source, move) {\n\t\t\t\tif (move && (source === this.effectState.target || target === this.effectState.target)) return 0;\n\t\t\t},\n\t\t\tonSourceAccuracy(accuracy) {\n\t\t\t\treturn true;\n\t\t\t},\n\t\t\tonAfterMove(pokemon, source) {\n\t\t\t\tpokemon.removeVolatile('tension');\n\t\t\t},\n\t\t\tonEnd(pokemon) {\n\t\t\t\tthis.add('-end', pokemon, 'move: Tension', '[silent]');\n\t\t\t},\n\t\t},\n\t\tgen: 8,\n\t},\n\n\t// LittEleven\n\tdarkroyalty: {\n\t\tdesc: \"While this Pokemon is active, priority moves from opposing Pokemon targeted at allies are prevented from having an effect. Dark-type attacks used by this Pokemon have their power multiplied by 1.2.\",\n\t\tshortDesc: \"Immune to priority. Dark-type attacks have 1.2x power.\",\n\t\tonFoeTryMove(target, source, move) {\n\t\t\tconst targetAllExceptions = ['perishsong', 'flowershield', 'rototiller'];\n\t\t\tif (move.target === 'foeSide' || (move.target === 'all' && !targetAllExceptions.includes(move.id))) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst dazzlingHolder = this.effectState.target;\n\t\t\tif ((source.isAlly(dazzlingHolder) || move.target === 'all') && move.priority > 0.1) {\n\t\t\t\tthis.attrLastMove('[still]');\n\t\t\t\tthis.add('-ability', dazzlingHolder, 'Dark Royalty');\n\t\t\t\tthis.add('cant', target, move, '[of] ' + dazzlingHolder);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\t\tonAllyBasePower(basePower, attacker, defender, move) {\n\t\t\tif (move.type === 'Dark') {\n\t\t\t\tthis.debug('Dark Royalty boost');\n\t\t\t\treturn this.chainModify(1.2);\n\t\t\t}\n\t\t},\n\t\tname: \"Dark Royalty\",\n\t},\n\n\t// Lunala\n\tmagichat: {\n\t\tdesc: \"This Pokemon can only be damaged by direct attacks. This Pokemon blocks certain status moves and instead uses the move against the original user.\",\n\t\tshortDesc: \"Magic Guard + Magic Bounce.\",\n\t\tonDamage(damage, target, source, effect) {\n\t\t\tif (effect.id === 'heavyhailstorm') return;\n\t\t\tif (effect.effectType !== 'Move') {\n\t\t\t\tif (effect.effectType === 'Ability') this.add('-activate', source, 'ability: ' + effect.name);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\t\tonTryHitPriority: 1,\n\t\tonTryHit(target, source, move) {\n\t\t\tif (target === source || move.hasBounced || !move.flags['reflectable']) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst newMove = this.dex.getActiveMove(move.id);\n\t\t\tnewMove.hasBounced = true;\n\t\t\tnewMove.pranksterBoosted = false;\n\t\t\tthis.add('-ability', target, 'Magic Hat');\n\t\t\tthis.actions.useMove(newMove, target, source);\n\t\t\treturn null;\n\t\t},\n\t\tonAllyTryHitSide(target, source, move) {\n\t\t\tif (target.isAlly(source) || move.hasBounced || !move.flags['reflectable']) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst newMove = this.dex.getActiveMove(move.id);\n\t\t\tnewMove.hasBounced = true;\n\t\t\tnewMove.pranksterBoosted = false;\n\t\t\tthis.add('-ability', target, 'Magic Hat');\n\t\t\tthis.actions.useMove(newMove, this.effectState.target, source);\n\t\t\treturn null;\n\t\t},\n\t\tcondition: {\n\t\t\tduration: 1,\n\t\t},\n\t\tname: \"Magic Hat\",\n\t\tgen: 8,\n\t},\n\n\t// Mad Monty \u00BE\u00B0\n\tpetrichor: {\n\t\tdesc: \"On switch-in, this Pokemon summons Rain Dance. If Rain Dance or Heavy Rain is active, this Pokemon's Electric-type moves have 1.2x power.\",\n\t\tshortDesc: \"Summons rain. Electric-type moves have 1.2x power in rain.\",\n\t\tname: \"Petrichor\",\n\t\tonStart(source) {\n\t\t\tthis.field.setWeather('raindance');\n\t\t},\n\t\tonBasePowerPriority: 23,\n\t\tonBasePower(basePower, pokemon, target, move) {\n\t\t\tif (move.type === 'Electric' && this.field.getWeather().id === 'raindance') {\n\t\t\t\treturn this.chainModify([4915, 4096]);\n\t\t\t}\n\t\t},\n\t},\n\n\t// Marshmallon\n\tstubbornness: {\n\t\tdesc: \"this Pokemon does not take recoil damage. The first time an opposing Pokemon boosts a stat each time this Pokemon is active, this Pokemon's Attack, Defense, and Special Defense are raised by 1 stage; each time the opponent boosts after this, this Pokemon's Attack is boosted by 1 stage. Activation of opposing Stubbornness will not activate Stubbornness.\",\n\t\tshortDesc: \"Rock Head + when foe first boosts, Atk/Def/SpD+1. Further foe boosts=+1 Atk.\",\n\t\tname: \"Stubbornness\",\n\t\tonDamage(damage, target, source, effect) {\n\t\t\tif (effect.id === 'recoil') {\n\t\t\t\tif (!this.activeMove) throw new Error(\"Battle.activeMove is null\");\n\t\t\t\tif (this.activeMove.id !== 'struggle') return null;\n\t\t\t}\n\t\t},\n\t\tonSwitchOut(pokemon) {\n\t\t\tif (this.effectState.happened) delete this.effectState.happened;\n\t\t},\n\t\tonFoeAfterBoost(boost, target, source, effect) {\n\t\t\tconst pokemon = target.side.foe.active[0];\n\t\t\tlet success = false;\n\t\t\tlet i: BoostID;\n\t\t\tfor (i in boost) {\n\t\t\t\tif (boost[i]! > 0) {\n\t\t\t\t\tsuccess = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Infinite Loop preventer\n\t\t\tif (effect?.name === 'Stubbornness') return;\n\t\t\tif (success) {\n\t\t\t\tif (!this.effectState.happened) {\n\t\t\t\t\tthis.boost({atk: 1, def: 1, spd: 1}, pokemon);\n\t\t\t\t\tthis.effectState.happened = true;\n\t\t\t\t} else {\n\t\t\t\t\tthis.boost({atk: 1}, pokemon);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tgen: 8,\n\t},\n\n\t// Mitsuki\n\tphotosynthesis: {\n\t\tdesc: \"On switch-in, this Pokemon summons Sunny Day. If Sunny Day is active and this Pokemon is not holding Utility Umbrella, this Pokemon's Speed is doubled.\",\n\t\tshortDesc: \"Drought + Chlorophyll\",\n\t\tname: \"Photosynthesis\",\n\t\tonStart(source) {\n\t\t\tfor (const action of this.queue) {\n\t\t\t\tif (action.choice === 'runPrimal' && action.pokemon === source && source.species.id === 'groudon') return;\n\t\t\t\tif (action.choice !== 'runSwitch' && action.choice !== 'runPrimal') break;\n\t\t\t}\n\t\t\tthis.field.setWeather('sunnyday');\n\t\t},\n\t\tonModifySpe(spe, pokemon) {\n\t\t\tif (['sunnyday', 'desolateland'].includes(pokemon.effectiveWeather())) {\n\t\t\t\treturn this.chainModify(2);\n\t\t\t}\n\t\t},\n\t\tgen: 8,\n\t},\n\n\t// n10siT\n\tgreedymagician: {\n\t\tdesc: \"This Pokemon steals the item off a Pokemon it hits with an attack. If this Pokemon already has an item, it is replaced with the stolen item. This ability does not affect Doom Desire and Future Sight.\",\n\t\tshortDesc: \"Steals item from foe on attack; replace current item with stolen item.\",\n\t\tname: \"Greedy Magician\",\n\t\tonSourceHit(target, source, move) {\n\t\t\tif (!move || !target) return;\n\t\t\tif (target !== source && move.category !== 'Status') {\n\t\t\t\tconst yourItem = target.takeItem(source);\n\t\t\t\tif (!yourItem) return;\n\t\t\t\tif (!source.setItem(yourItem)) {\n\t\t\t\t\ttarget.item = yourItem.id;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.add('-item', source, yourItem, '[from] ability: Greedy Magician', '[of] ' + source);\n\t\t\t}\n\t\t},\n\t\tgen: 8,\n\t},\n\n\t// Nol\n\tburningsoul: {\n\t\tdesc: \"On switch-in, this Pokemon summons Sunny Day. If this Pokemon is at full HP, it survives one hit with at least 1 HP. OHKO moves fail when used against this Pokemon.\",\n\t\tshortDesc: \"Drought + Sturdy.\",\n\t\tonStart(source) {\n\t\t\tthis.field.setWeather('sunnyday');\n\t\t},\n\t\tonTryHit(pokemon, target, move) {\n\t\t\tif (move.ohko) {\n\t\t\t\tthis.add('-immune', pokemon, '[from] ability: Burning Soul');\n\t\t\t\treturn null;\n\t\t\t}\n\t\t},\n\t\tonDamagePriority: -100,\n\t\tonDamage(damage, target, source, effect) {\n\t\t\tif (target.hp === target.maxhp && damage >= target.hp && effect && effect.effectType === 'Move') {\n\t\t\t\tthis.add('-ability', target, 'Burning Soul');\n\t\t\t\treturn target.hp - 1;\n\t\t\t}\n\t\t},\n\t\tname: \"Burning Soul\",\n\t\tgen: 8,\n\t},\n\n\t// Notater517\n\tlastminutelag: {\n\t\tdesc: \"This Pokemon applies the Recharge status to the opposing Pokemon if this Pokemon needs to recharge. If this Pokemon KOs an opposing Pokemon with a recharge move, then the user does not need to recharge.\",\n\t\tshortDesc: \"Gives Recharge to the target if this Pokemon has it. KO: No recharge.\",\n\t\tonModifyMove(move, pokemon, target) {\n\t\t\tif (move.self?.volatileStatus === 'mustrecharge') {\n\t\t\t\tif (!move.volatileStatus) {\n\t\t\t\t\tmove.volatileStatus = 'mustrecharge';\n\t\t\t\t} else {\n\t\t\t\t\tif (!move.secondaries) move.secondaries = [];\n\t\t\t\t\tmove.secondaries.push({chance: 100, volatileStatus: 'mustrecharge'});\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tonAfterMoveSecondarySelf(pokemon, target, move) {\n\t\t\tif (!target || target.fainted || target.hp <= 0) {\n\t\t\t\tif (pokemon.volatiles['mustrecharge']) {\n\t\t\t\t\tthis.add('-ability', pokemon, 'Last Minute Lag');\n\t\t\t\t\tthis.add('-end', pokemon, 'mustrecharge');\n\t\t\t\t\tdelete pokemon.volatiles['mustrecharge'];\n\t\t\t\t\tthis.hint('It may look like this Pokemon is going to recharge next turn, but it will not recharge.');\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tname: \"Last-Minute Lag\",\n\t\tgen: 8,\n\t},\n\n\t// nui\n\tconditionoverride: {\n\t\tdesc: \"This Pokemon can attract opponents regardless of gender. Pokemon that are attracted have their Special Defense stat reduced by 25%.\",\n\t\tshortDesc: \"Attracts anyone. Attracted Pokemon have SpD reduced by 25%.\",\n\t\t// See conditions.ts for implementation\n\t\tname: \"Condition Override\",\n\t\tgen: 8,\n\t},\n\n\t// pants\n\tghostspores: {\n\t\tdesc: \"This Pokemon ignores the foe's stat boosts. On switch-out, this Pokemon regenerates 1/3 HP, rounded down. If this Pokemon is hit by an attack, Leech Seed is applied to the foe. If this Pokemon is KOed, Curse is applied to the foe.\",\n\t\tshortDesc: \"Unaware + Regenerator. If hit, foe is Leech Seeded. If KOed, foe is Cursed.\",\n\t\tname: 'Ghost Spores',\n\t\tonDamagingHit(damage, target, source, move) {\n\t\t\tif (!target.hp) {\n\t\t\t\tsource.addVolatile('curse', target);\n\t\t\t} else {\n\t\t\t\tsource.addVolatile('leechseed', target);\n\t\t\t}\n\t\t},\n\t\tonAnyModifyBoost(boosts, pokemon) {\n\t\t\tconst unawareUser = this.effectState.target;\n\t\t\tif (unawareUser === pokemon) return;\n\t\t\tif (unawareUser === this.activePokemon && pokemon === this.activeTarget) {\n\t\t\t\tboosts['def'] = 0;\n\t\t\t\tboosts['spd'] = 0;\n\t\t\t\tboosts['evasion'] = 0;\n\t\t\t}\n\t\t\tif (pokemon === this.activePokemon && unawareUser === this.activeTarget) {\n\t\t\t\tboosts['atk'] = 0;\n\t\t\t\tboosts['def'] = 0;\n\t\t\t\tboosts['spa'] = 0;\n\t\t\t\tboosts['accuracy'] = 0;\n\t\t\t}\n\t\t},\n\t\tonSwitchOut(pokemon) {\n\t\t\tpokemon.heal(pokemon.baseMaxhp / 3);\n\t\t},\n\t},\n\n\t// PartMan\n\thecatomb: {\n\t\tdesc: \"This Pokemon's Speed is raised by 1 stage if it attacks and knocks out another Pokemon. If the Pokemon is Chandelure and is not shiny, it changes its set.\",\n\t\tshortDesc: \"Spe +1 on KOing foe. Chandelure: changes sets.\",\n\t\tname: 'Hecatomb',\n\t\tonSourceAfterFaint(length, target, source, effect) {\n\t\t\tif (effect && effect.effectType === 'Move') {\n\t\t\t\tthis.boost({spe: length}, source);\n\t\t\t\tif (source.species.baseSpecies !== 'Chandelure') return;\n\t\t\t\tif (source.set.shiny) return;\n\t\t\t\tsource.m.nowShiny = true;\n\t\t\t\tthis.add(`c:|${Math.floor(Date.now() / 1000)}|${getName('PartMan')}|THE LIGHT! IT BURNS!`);\n\t\t\t\tchangeSet(this, source, ssbSets['PartMan-Shiny']);\n\t\t\t}\n\t\t},\n\t\tgen: 8,\n\t},\n\n\t// peapod\n\tstealthblack: {\n\t\tdesc: \"No competitive use.\",\n\t\tname: 'Stealth Black',\n\t\tgen: 8,\n\t},\n\n\t// Perish Song\n\tsoupsipper: {\n\t\tdesc: \"This Pokemon is immune to Grass- and Water-type moves, restores 1/4 of its maximum HP, rounded down, when hit by these types, and boosts its Attack by 1 stage when hit by these types.\",\n\t\tshortDesc: \"Immune to Water and Grass moves, heals 1/4 HP and gains +1 Atk when hit by them.\",\n\t\tonTryHit(target, source, move) {\n\t\t\tif (target !== source && ['Water', 'Grass'].includes(move.type)) {\n\t\t\t\tlet success = false;\n\t\t\t\tif (this.heal(target.baseMaxhp / 4)) success = true;\n\t\t\t\tif (this.boost({atk: 1})) success = true;\n\t\t\t\tif (!success) {\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Soup Sipper');\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\t},\n\t\tname: \"Soup Sipper\",\n\t\tgen: 8,\n\t},\n\n\t// phiwings99\n\tplausibledeniability: {\n\t\tdesc: \"This Pokemon's Status moves have priority raised by 1, but Dark-types are immune. Additionally, This Pokemon ignores other Pokemon's Attack, Special Attack, and accuracy stat stages when taking damage, and ignores other Pokemon's Defense, Special Defense, and evasiveness stat stages when dealing damage.\",\n\t\tshortDesc: \"Unaware + Prankster. Dark-types still immune to Prankster moves.\",\n\t\tname: \"Plausible Deniability\",\n\t\tonAnyModifyBoost(boosts, pokemon) {\n\t\t\tconst unawareUser = this.effectState.target;\n\t\t\tif (unawareUser === pokemon) return;\n\t\t\tif (unawareUser === this.activePokemon && pokemon === this.activeTarget) {\n\t\t\t\tboosts['def'] = 0;\n\t\t\t\tboosts['spd'] = 0;\n\t\t\t\tboosts['evasion'] = 0;\n\t\t\t}\n\t\t\tif (pokemon === this.activePokemon && unawareUser === this.activeTarget) {\n\t\t\t\tboosts['atk'] = 0;\n\t\t\t\tboosts['def'] = 0;\n\t\t\t\tboosts['spa'] = 0;\n\t\t\t\tboosts['spd'] = 0;\n\t\t\t\tboosts['accuracy'] = 0;\n\t\t\t}\n\t\t},\n\t\tonModifyPriority(priority, pokemon, target, move) {\n\t\t\tif (move?.category === 'Status') {\n\t\t\t\tmove.pranksterBoosted = true;\n\t\t\t\treturn priority + 1;\n\t\t\t}\n\t\t},\n\t\tgen: 8,\n\t},\n\n\t// piloswine gripado\n\tforeverwinternights: {\n\t\tdesc: \"On switch-in, this Pokemon summons Winter Hail. Winter Hail is hail that also lowers the Speed of non-Ice-type Pokemon by 50%. This weather remains in effect until this Ability is no longer active for any Pokemon, or the weather is changed by Delta Stream, Desolate Land, or Primordial Sea.\",\n\t\tshortDesc: \"Sets permahail until this Pokemon switches out. Non-Ice: 1/2 Speed\",\n\t\tonStart(source) {\n\t\t\tthis.field.setWeather('winterhail');\n\t\t},\n\t\tonAnySetWeather(target, source, weather) {\n\t\t\tif (this.field.getWeather().id === 'winterhail' && !STRONG_WEATHERS.includes(weather.id)) return false;\n\t\t},\n\t\tonEnd(pokemon) {\n\t\t\tif (this.field.weatherState.source !== pokemon) return;\n\t\t\tfor (const target of this.getAllActive()) {\n\t\t\t\tif (target === pokemon) continue;\n\t\t\t\tif (target.hasAbility('winterhail')) {\n\t\t\t\t\tthis.field.weatherState.source = target;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.field.clearWeather();\n\t\t},\n\t\tname: \"Forever Winter Nights\",\n\t\tgen: 8,\n\t},\n\n\t// PiraTe Princess\n\twildmagicsurge: {\n\t\tdesc: \"Randomly changes this Pokemon's type at the end of every turn to the type of one of its moves; same-type attack bonus (STAB) is 2 instead of 1.5.\",\n\t\tshortDesc: \"Adaptability + Randomly changes to the type of one of its moves every turn.\",\n\t\tname: \"Wild Magic Surge\",\n\t\tonModifyMove(move) {\n\t\t\tmove.stab = 2;\n\t\t},\n\t\tonResidual(pokemon) {\n\t\t\tif (!pokemon.hp) return;\n\t\t\tconst types = pokemon.moveSlots.map(slot => this.dex.moves.get(slot.id).type);\n\t\t\tconst type = types.length ? this.sample(types) : '???';\n\t\t\tif (this.dex.types.isName(type) && pokemon.setType(type)) {\n\t\t\t\tthis.add('-ability', pokemon, 'Wild Magic Surge');\n\t\t\t\tthis.add('-start', pokemon, 'typechange', type);\n\t\t\t}\n\t\t},\n\t\tgen: 8,\n\t},\n\n\t// Psynergy\n\tsupernova: {\n\t\tdesc: \"On switch-in, if total positive boosts - total negative boosts \u2265 8, both Pokemon faint.\",\n\t\tonStart(source) {\n\t\t\tlet result = 0;\n\t\t\tconst pokemon = this.getAllActive();\n\t\t\tfor (const poke of pokemon) {\n\t\t\t\tresult += Object.values(poke.boosts).reduce((total, x) => total + x);\n\t\t\t}\n\t\t\tif (result < 8) return;\n\t\t\tthis.add('-ability', source, 'Supernova');\n\t\t\tfor (const x of pokemon) {\n\t\t\t\tthis.add('-anim', x, 'Explosion', x);\n\t\t\t\tx.faint();\n\t\t\t}\n\t\t},\n\t\tname: \"Supernova\",\n\t\tgen: 8,\n\t},\n\n\t// ptoad\n\tswampysurge: {\n\t\tdesc: \"On switch-in, this Pokemon summons Swampy Terrain. Swampy Terrain halves the power of Electric-, Grass-, and Ice-type moves used by grounded Pokemon and heals grounded Water- and Ground-types by 1/16 of their maximum HP, rounded down, each turn.\",\n\t\tshortDesc: \"5 turns: Grounded: 1/2 Elec/Grass/Ice power, +1/16 HP/turn for Water or Ground.\",\n\t\tonStart(source) {\n\t\t\tthis.field.setTerrain('swampyterrain');\n\t\t},\n\t\tname: \"Swampy Surge\",\n\t\tgen: 8,\n\t},\n\n\t// Rach\n\tburnitdown: {\n\t\tdesc: \"On switch-in, this Pokemon lowers the foe's higher offensive stat.\",\n\t\tshortDesc: \"Lower the foe's higher offensive stat.\",\n\t\tonStart(pokemon) {\n\t\t\tlet totalatk = 0;\n\t\t\tlet totalspa = 0;\n\t\t\tfor (const target of pokemon.foes()) {\n\t\t\t\ttotalatk += target.getStat('atk', false, true);\n\t\t\t\ttotalspa += target.getStat('spa', false, true);\n\t\t\t}\n\t\t\tfor (const target of pokemon.foes()) {\n\t\t\t\tthis.add('-ability', pokemon, 'BURN IT DOWN!');\n\t\t\t\tif (totalatk && totalatk >= totalspa) {\n\t\t\t\t\tthis.boost({atk: -1}, target, pokemon, null, true);\n\t\t\t\t} else if (totalspa) {\n\t\t\t\t\tthis.boost({spa: -1}, target, pokemon, null, true);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tname: \"BURN IT DOWN!\",\n\t\tgen: 8,\n\t},\n\n\t// Rage\n\tinversionsurge: {\n\t\tdesc: \"On switch-in, this Pokemon summons Inversion Terrain. While Inversion Terrain is active, type effectiveness for all Pokemon on the field is inverted, and paralyzed Pokemon have doubled, instead of halved, Speed.\",\n\t\tshortDesc: \"Summons Inversion Terrain; 5 turns: Inverse Battle, par: 2x Spe.\",\n\t\tonStart(source) {\n\t\t\tthis.field.setTerrain('inversionterrain');\n\t\t},\n\t\tname: \"Inversion Surge\",\n\t\tgen: 8,\n\t},\n\n\t// Raihan Kibana\n\troyalcoat: {\n\t\tdesc: \"If Sandstorm is active, this Pokemon's Speed is doubled and its Special Defense is multiplied by 1.5. This Pokemon takes no damage from Sandstorm.\",\n\t\tshortDesc: \"If Sandstorm, Speed x2 and SpD x1.5; immunity to Sandstorm.\",\n\t\tname: \"Royal Coat\",\n\t\tonModifySpe(spe, pokemon) {\n\t\t\tif (this.field.isWeather('sandstorm')) {\n\t\t\t\treturn this.chainModify(2);\n\t\t\t}\n\t\t},\n\t\tonModifySpD(spd, pokemon) {\n\t\t\tif (this.field.isWeather('sandstorm')) {\n\t\t\t\treturn this.chainModify(1.5);\n\t\t\t}\n\t\t},\n\t\tonImmunity(type, pokemon) {\n\t\t\tif (type === 'sandstorm') return false;\n\t\t},\n\t\tgen: 8,\n\t},\n\n\t// RavioliQueen\n\tphantomplane: {\n\t\tdesc: \"On switch-in, this Pokemon summons Pitch Black Terrain. While Pitch Black Terrain is active, all non-Ghost-type Pokemon take damage equal to 1/16 of their max HP, rounded down, at the end of each turn.\",\n\t\tshortDesc: \"Summons Pitch Black Terrain, which damages non-Ghosts by 1/16 per turn.\",\n\t\tonStart(source) {\n\t\t\tthis.field.setTerrain('pitchblackterrain');\n\t\t},\n\t\tname: \"Phantom Plane\",\n\t\tgen: 8,\n\t},\n\n\t// Robb576\n\tthenumbersgame: {\n\t\tdesc: \"If this Pokemon is a forme of Necrozma, its forme changes on switch-in depending on the number of unfainted Pokemon on the user's team: Necrozma-Dusk-Mane if 3 or fewer Pokemon and Necrozma-Dawn-Wings was sent out already; Necrozma-Ultra if it is the last Pokemon left on the team and Necrozma-Dusk-Mane was sent out already.\",\n\t\tshortDesc: \"Changes forme on switch-in depending on # of remaining Pokemon on user's team.\",\n\t\tname: \"The Numbers Game\",\n\t\tisPermanent: true,\n\t\tonStart(target) {\n\t\t\tif (target.baseSpecies.baseSpecies !== 'Necrozma' || target.transformed) return;\n\t\t\tif (target.side.pokemonLeft <= 3) {\n\t\t\t\tif (target.species.name === 'Necrozma-Dusk-Mane' && target.side.pokemonLeft === 1 && target.m.flag2) {\n\t\t\t\t\tchangeSet(this, target, ssbSets['Robb576-Ultra']);\n\t\t\t\t} else if (target.species.name === \"Necrozma-Dawn-Wings\" && target.m.flag1) {\n\t\t\t\t\tchangeSet(this, target, ssbSets['Robb576-Dusk-Mane']);\n\t\t\t\t\ttarget.m.flag2 = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttarget.m.flag1 = true;\n\t\t},\n\t\tgen: 8,\n\t},\n\n\t// Sectonia\n\troyalaura: {\n\t\tdesc: \"If this Pokemon is the target of an opposing Pokemon's move, that move loses one additional PP. Moves used by this Pokemon only use 0.5 PP.\",\n\t\tshortDesc: \"Pressure, and this Pokemon uses 0.5 PP per move.\",\n\t\tname: \"Royal Aura\",\n\t\tonStart(pokemon) {\n\t\t\tthis.add('-ability', pokemon, 'Royal Aura');\n\t\t},\n\t\tonDeductPP(target, source) {\n\t\t\tif (target.isAlly(source)) return;\n\t\t\treturn 1;\n\t\t},\n\t\tonTryMove(pokemon, target, move) {\n\t\t\tconst moveData = pokemon.getMoveData(move.id);\n\t\t\tif (!moveData || moveData.pp < 0.5) return;\n\t\t\t// Lost 1 PP due to move usage, restore 0.5 PP to make it so that only 0.5 PP\n\t\t\t// would be used.\n\t\t\tmoveData.pp += 0.5;\n\t\t},\n\t\tgen: 8,\n\t},\n\n\t// Segmr\n\tskilldrain: {\n\t\tdesc: \"While this Pokemon is active, no moves will trigger their secondary effects, and moves that cause the user to switch out will no longer do so.\",\n\t\tshortDesc: \"While active: no secondary effects, moves can't switch out.\",\n\t\tname: \"Skill Drain\",\n\t\tonAnyModifyMove(move) {\n\t\t\tdelete move.secondaries;\n\t\t},\n\t\t// afterSecondarySelf and switch nullifying handled in ssb/scripts.ts\n\t\tgen: 8,\n\t},\n\n\t// sejesensei\n\ttrashconsumer: {\n\t\tdesc: \"This Pokemon is immune to Poison-type moves and restores 1/4 of its maximum HP, rounded down, when hit by a Poison-type move. Pokemon making contact with this Pokemon lose 1/8 of their maximum HP, rounded down.\",\n\t\tshortDesc: \"Poison Absorb + Rough Skin\",\n\t\tname: \"Trash Consumer\",\n\t\tonTryHit(target, source, move) {\n\t\t\tif (target !== source && move.type === 'Poison') {\n\t\t\t\tif (!this.heal(target.baseMaxhp / 4)) {\n\t\t\t\t\tthis.add('-immune', target, '[from] ability: Trash Consumer');\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\t},\n\t\tonDamagingHitOrder: 1,\n\t\tonDamagingHit(damage, target, source, move) {\n\t\t\tif (this.checkMoveMakesContact(move, source, target, true)) {\n\t\t\t\tthis.damage(source.baseMaxhp / 8, source, target);\n\t\t\t}\n\t\t},\n\t\tgen: 8,\n\t},\n\n\t// Shadecession\n\tshadydeal: {\n\t\tdesc: \"On switch-in, this Pokemon boosts a random stat other than Special Attack by 1 stage and gains 2 random type immunities that are displayed to the opponent.\",\n\t\tshortDesc: \"On switch-in, gains random +1 to non-SpA, 2 random immunities.\",\n\t\tonStart(pokemon) {\n\t\t\tconst stats: BoostID[] = [];\n\t\t\tlet stat: BoostID;\n\t\t\tfor (stat in pokemon.boosts) {\n\t\t\t\tconst noBoost: string[] = ['accuracy', 'evasion', 'spa'];\n\t\t\t\tif (!noBoost.includes(stat) && pokemon.boosts[stat] < 6) {\n\t\t\t\t\tstats.push(stat);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (stats.length) {\n\t\t\t\tconst randomStat = this.sample(stats);\n\t\t\t\tconst boost: SparseBoostsTable = {};\n\t\t\t\tboost[randomStat] = 1;\n\t\t\t\tthis.boost(boost);\n\t\t\t}\n\t\t\tif (this.effectState.immunities) return;\n\t\t\tconst typeList = this.dex.types.names();\n\t\t\tconst firstTypeIndex = this.random(typeList.length);\n\t\t\tconst secondType = this.sample(typeList.slice(0, firstTypeIndex).concat(typeList.slice(firstTypeIndex + 1)));\n\t\t\tthis.effectState.immunities = [typeList[firstTypeIndex], secondType];\n\t\t\tthis.add('-start', pokemon, `${this.effectState.immunities[0]} Immunity`, '[silent]');\n\t\t\tthis.add('-start', pokemon, `${this.effectState.immunities[1]} Immunity`, '[silent]');\n\t\t\tthis.add(\"-message\", `${pokemon.name} is now immune to ${this.effectState.immunities[0]} and ${this.effectState.immunities[1]} type attacks!`);\n\t\t},\n\t\tonTryHit(target, source, move) {\n\t\t\tif (target !== source && this.effectState.immunities?.includes(move.type)) {\n\t\t\t\tthis.add('-immune', target, '[from] ability: Shady Deal');\n\t\t\t\treturn null;\n\t\t\t}\n\t\t},\n\t\tonEnd(pokemon) {\n\t\t\tif (!this.effectState.immunities) return;\n\t\t\tthis.add('-end', pokemon, `${this.effectState.immunities[0]} Immunity`, '[silent]');\n\t\t\tthis.add('-end', pokemon, `${this.effectState.immunities[1]} Immunity`, '[silent]');\n\t\t\tdelete this.effectState.immunities;\n\t\t},\n\t\tname: \"Shady Deal\",\n\t\tgen: 8,\n\t},\n\n\t// Soft Flex\n\teyeofthestorm: {\n\t\tname: \"Eye of the Storm\",\n\t\tdesc: \"On switch-in, this Pokemon summons Rain Dance and Tempest Terrain. While Tempest Terrain is active, Electric-type Pokemon are healed by 1/16 of their maximum HP, rounded down, at the end of each turn, and Flying- and Steel-type Pokemon lose 1/16 of their maximum HP, rounded down, at the end of each turn. If the Flying- or Steel-type Pokemon is also Electric-type, they only receive the healing.\",\n\t\tshortDesc: \"5 turns: Rain, +1/16 HP/turn to Elec, -1/16/turn to Fly/Steel.\",\n\t\tonStart(source) {\n\t\t\tthis.field.setWeather('raindance', source);\n\t\t\tthis.field.setTerrain('tempestterrain', source);\n\t\t},\n\t},\n\t// Spandan\n\thackedcorrosion: {\n\t\tdesc: \"This Pokemon ignores other Pokemon's stat stages when taking or doing damage. This Pokemon can poison or badly poison Pokemon regardless of their typing.\",\n\t\tshortDesc: \"Unaware + Corrosion.\",\n\t\tonAnyModifyBoost(boosts, pokemon) {\n\t\t\tconst unawareUser = this.effectState.target;\n\t\t\tif (unawareUser === pokemon) return;\n\t\t\tif (unawareUser === this.activePokemon && pokemon === this.activeTarget) {\n\t\t\t\tboosts['def'] = 0;\n\t\t\t\tboosts['spd'] = 0;\n\t\t\t\tboosts['evasion'] = 0;\n\t\t\t}\n\t\t\tif (pokemon === this.activePokemon && unawareUser === this.activeTarget) {\n\t\t\t\tboosts['atk'] = 0;\n\t\t\t\tboosts['def'] = 0;\n\t\t\t\tboosts['spa'] = 0;\n\t\t\t\tboosts['spd'] = 0;\n\t\t\t\tboosts['accuracy'] = 0;\n\t\t\t}\n\t\t},\n\t\tname: \"Hacked Corrosion\",\n\t},\n\n\t// Struchni\n\toveraskedclause: {\n\t\tdesc: \"If this Pokemon is an Aggron and is hit by a move that is not very effective, this Pokemon becomes Aggron-Mega and its Attack is boosted by 1 stage.\",\n\t\tshortDesc: \"Aggron: If hit by resisted move, Mega Evolve and gain +1 Atk.\",\n\t\tname: \"Overasked Clause\",\n\t\tisPermanent: true,\n\t\tonHit(target, source, move) {\n\t\t\tif (target.getMoveHitData(move).typeMod < 0) {\n\t\t\t\tif (!target.hp) return;\n\t\t\t\tif (target.species.id.includes('aggron') && !target.illusion && !target.transformed) {\n\t\t\t\t\tthis.boost({atk: 1}, target);\n\t\t\t\t\tif (target.species.name !== 'Aggron') return;\n\t\t\t\t\tthis.actions.runMegaEvo(target);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tgen: 8,\n\t},\n\n\t// Teclis\n\tfieryfur: {\n\t\tname: \"Fiery Fur\",\n\t\tdesc: \"If this Pokemon is at full HP, damage taken from attacks is halved.\",\n\t\tonSourceModifyDamage(damage, source, target, move) {\n\t\t\tif (target.hp >= target.maxhp) {\n\t\t\t\tthis.debug('Fiery Fur weaken');\n\t\t\t\treturn this.chainModify(0.5);\n\t\t\t}\n\t\t},\n\t},\n\n\t// temp\n\tchargedup: {\n\t\tdesc: \"If this Pokemon has a negative stat boost at -2 or lower, this Pokemon's negative stat boosts are cleared.\",\n\t\tshortDesc: \"Resets negative stat boosts if there is one at -2 or lower.\",\n\t\tname: \"Charged Up\",\n\t\tonUpdate(pokemon) {\n\t\t\tlet activate = false;\n\t\t\tconst boosts: SparseBoostsTable = {};\n\t\t\tlet i: BoostID;\n\t\t\tfor (i in pokemon.boosts) {\n\t\t\t\tif (pokemon.boosts[i] <= -2) {\n\t\t\t\t\tactivate = true;\n\t\t\t\t\tboosts[i] = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (activate) {\n\t\t\t\tpokemon.setBoost(boosts);\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Charged Up');\n\t\t\t\tthis.add('-clearnegativeboost', pokemon);\n\t\t\t}\n\t\t},\n\t\tgen: 8,\n\t},\n\n\t// tiki\n\ttruegrit: {\n\t\tdesc: \"This Pokemon receives 1/2 damage from special attacks. This Pokemon ignores other Pokemon's Attack, Special Attack, and accuracy stat stages when taking damage, and ignores other Pokemon's Defense, Special Defense, and evasiveness stat stages when dealing damage.\",\n\t\tshortDesc: \"Takes 1/2 damage from special moves and ignores boosts.\",\n\t\tname: \"True Grit\",\n\t\tonSourceModifyDamage(damage, source, target, move) {\n\t\t\tif (move.category === 'Special') {\n\t\t\t\treturn this.chainModify(0.5);\n\t\t\t}\n\t\t},\n\t\tonAnyModifyBoost(boosts, pokemon) {\n\t\t\tconst unawareUser = this.effectState.target;\n\t\t\tif (unawareUser === pokemon) return;\n\t\t\tif (unawareUser === this.activePokemon && pokemon === this.activeTarget) {\n\t\t\t\tboosts['def'] = 0;\n\t\t\t\tboosts['spd'] = 0;\n\t\t\t\tboosts['evasion'] = 0;\n\t\t\t}\n\t\t\tif (pokemon === this.activePokemon && unawareUser === this.activeTarget) {\n\t\t\t\tboosts['atk'] = 0;\n\t\t\t\tboosts['def'] = 0;\n\t\t\t\tboosts['spa'] = 0;\n\t\t\t\tboosts['spd'] = 0;\n\t\t\t\tboosts['accuracy'] = 0;\n\t\t\t}\n\t\t},\n\t\tgen: 8,\n\t},\n\n\t// Trickster\n\ttrillionageroots: {\n\t\tdesc: \"This Pokemon applies Leech Seed to the opposing Pokemon when hit with an attacking move. If this Pokemon is at full HP, it survives one hit with at least 1 HP. OHKO moves fail when used against this Pokemon.\",\n\t\tshortDesc: \"Sturdy + apply Leech Seed when hit by foe.\",\n\t\tonTryHit(pokemon, target, move) {\n\t\t\tif (move.ohko) {\n\t\t\t\tthis.add('-immune', pokemon, '[from] ability: Trillionage Roots');\n\t\t\t\treturn null;\n\t\t\t}\n\t\t},\n\t\tonDamagePriority: -100,\n\t\tonDamage(damage, target, source, effect) {\n\t\t\tif (target.hp === target.maxhp && damage >= target.hp && effect && effect.effectType === 'Move') {\n\t\t\t\tthis.add('-ability', target, 'Trillionage Roots');\n\t\t\t\treturn target.hp - 1;\n\t\t\t}\n\t\t},\n\t\tonDamagingHit(damage, target, source, move) {\n\t\t\tif (source.volatiles['leechseed']) return;\n\t\t\tif (!move.flags['futuremove']) {\n\t\t\t\tsource.addVolatile('leechseed', this.effectState.target);\n\t\t\t}\n\t\t},\n\t\tname: \"Trillionage Roots\",\n\t\tgen: 8,\n\t},\n\n\t// Volco\n\tspeedrunning: {\n\t\tdesc: \"This Pokemon's Special Attack is raised by 1 stage when another Pokemon faints. Moves used by this Pokemon that are 60 Base Power or lower gain an additional 25 Base Power. No moves can defrost a frozen Pokemon while this Pokemon is active. However, using a move that would defrost will still go through freeze.\",\n\t\tshortDesc: \"Soul Heart + Weak moves get +25 BP. Moves can't defrost. Defrost moves go thru frz.\",\n\t\tonAnyFaintPriority: 1,\n\t\tonAnyFaint() {\n\t\t\tthis.boost({spa: 1}, this.effectState.target);\n\t\t},\n\t\tonAnyModifyMove(move, pokemon) {\n\t\t\tif (move.thawsTarget) {\n\t\t\t\tdelete move.thawsTarget;\n\t\t\t}\n\t\t\tif (move.flags[\"defrost\"]) {\n\t\t\t\tdelete move.flags[\"defrost\"];\n\t\t\t}\n\t\t},\n\t\tonBasePowerPriority: 21,\n\t\tonBasePower(basePower, pokemon, target, move) {\n\t\t\tif (move.basePower <= 60) return basePower + 25;\n\t\t},\n\t\tname: \"Speedrunning\",\n\t\tgen: 8,\n\t},\n\n\t// Vexen\n\taquilasblessing: {\n\t\tdesc: \"This Pokemon's attacks with secondary effects have their power multiplied by 1.3, but the secondary effects are removed. If this Pokemon gets hit by a damaging Fire type move, its Defense and Special Defense get raised by 1 stage.\",\n\t\tshortDesc: \"Sheer Force + when hit with Fire move: +1 Def/SpD.\",\n\t\tonModifyMove(move, pokemon) {\n\t\t\tif (move.secondaries) {\n\t\t\t\tdelete move.secondaries;\n\t\t\t\t// Technically not a secondary effect, but it is negated\n\t\t\t\tif (move.id === 'clangoroussoulblaze') delete move.selfBoost;\n\t\t\t\t// Actual negation of `AfterMoveSecondary` effects implemented in scripts.js\n\t\t\t\tmove.hasSheerForce = true;\n\t\t\t}\n\t\t},\n\t\tonBasePowerPriority: 21,\n\t\tonBasePower(basePower, pokemon, target, move) {\n\t\t\tif (move.hasSheerForce) return this.chainModify([5325, 4096]);\n\t\t},\n\t\tonDamagingHit(damage, target, source, move) {\n\t\t\tif (move.type === 'Fire') {\n\t\t\t\tthis.boost({def: 1, spd: 1});\n\t\t\t}\n\t\t},\n\t\tname: \"Aquila's Blessing\",\n\t\tgen: 8,\n\t},\n\n\t// vooper\n\tqigong: {\n\t\tdesc: \"This Pokemon's Defense is doubled, and it receives 1/2 damage from special attacks.\",\n\t\tonModifyDefPriority: 6,\n\t\tonModifyDef(def) {\n\t\t\treturn this.chainModify(2);\n\t\t},\n\t\tonSourceModifyDamage(damage, source, target, move) {\n\t\t\tif (move.category === 'Special') {\n\t\t\t\treturn this.chainModify(0.5);\n\t\t\t}\n\t\t},\n\t\tname: \"Qi-Gong\",\n\t\tgen: 8,\n\t},\n\n\t// yuki\n\tcombattraining: {\n\t\tdesc: \"If this Pokemon is a Cosplay Pikachu forme, the first hit it takes in battle deals 0 neutral damage. Confusion damage also breaks the immunity.\",\n\t\tshortDesc: \"(Pikachu-Cosplay only) First hit deals 0 damage.\",\n\t\tisPermanent: true,\n\t\tonDamagePriority: 1,\n\t\tonDamage(damage, target, source, effect) {\n\t\t\tconst cosplayFormes = [\n\t\t\t\t'pikachucosplay', 'pikachuphd', 'pikachulibre', 'pikachupopstar', 'pikachurockstar', 'pikachubelle',\n\t\t\t];\n\t\t\tif (\n\t\t\t\teffect?.effectType === 'Move' &&\n\t\t\t\tcosplayFormes.includes(target.species.id) && !target.transformed &&\n\t\t\t\t!this.effectState.busted\n\t\t\t) {\n\t\t\t\tthis.add('-activate', target, 'ability: Combat Training');\n\t\t\t\tthis.effectState.busted = true;\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t},\n\t\tonCriticalHit(target, source, move) {\n\t\t\tif (!target) return;\n\t\t\tconst cosplayFormes = [\n\t\t\t\t'pikachucosplay', 'pikachuphd', 'pikachulibre', 'pikachupopstar', 'pikachurockstar', 'pikachubelle',\n\t\t\t];\n\t\t\tif (!cosplayFormes.includes(target.species.id) || target.transformed) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst hitSub = target.volatiles['substitute'] && !move.flags['bypasssub'] && !(move.infiltrates && this.gen >= 6);\n\t\t\tif (hitSub) return;\n\n\t\t\tif (!target.runImmunity(move.type)) return;\n\t\t\treturn false;\n\t\t},\n\t\tonEffectiveness(typeMod, target, type, move) {\n\t\t\tif (!target) return;\n\t\t\tconst cosplayFormes = [\n\t\t\t\t'pikachucosplay', 'pikachuphd', 'pikachulibre', 'pikachupopstar', 'pikachurockstar', 'pikachubelle',\n\t\t\t];\n\t\t\tif (!cosplayFormes.includes(target.species.id) || target.transformed) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst hitSub = target.volatiles['substitute'] && !move.flags['bypasssub'] && !(move.infiltrates && this.gen >= 6);\n\t\t\tif (hitSub) return;\n\n\t\t\tif (!target.runImmunity(move.type)) return;\n\t\t\treturn 0;\n\t\t},\n\t\tname: \"Combat Training\",\n\t\tgen: 8,\n\t},\n\t// Modified Illusion to support SSB volatiles\n\tillusion: {\n\t\tinherit: true,\n\t\tonEnd(pokemon) {\n\t\t\tif (pokemon.illusion) {\n\t\t\t\tthis.debug('illusion cleared');\n\t\t\t\tlet disguisedAs = this.toID(pokemon.illusion.name);\n\t\t\t\tpokemon.illusion = null;\n\t\t\t\tconst details = pokemon.species.name + (pokemon.level === 100 ? '' : ', L' + pokemon.level) +\n\t\t\t\t\t(pokemon.gender === '' ? '' : ', ' + pokemon.gender) + (pokemon.set.shiny ? ', shiny' : '');\n\t\t\t\tthis.add('replace', pokemon, details);\n\t\t\t\tthis.add('-end', pokemon, 'Illusion');\n\t\t\t\t// Handle users whose names match a species\n\t\t\t\tif (this.dex.species.get(disguisedAs).exists) disguisedAs += 'user';\n\t\t\t\tif (pokemon.volatiles[disguisedAs]) {\n\t\t\t\t\tpokemon.removeVolatile(disguisedAs);\n\t\t\t\t}\n\t\t\t\tif (!pokemon.volatiles[this.toID(pokemon.name)]) {\n\t\t\t\t\tconst status = this.dex.conditions.get(this.toID(pokemon.name));\n\t\t\t\t\tif (status?.exists) {\n\t\t\t\t\t\tpokemon.addVolatile(this.toID(pokemon.name), pokemon);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t},\n\n\t// Modified various abilities to support Alpha's move & pilo's abiility\n\tdeltastream: {\n\t\tinherit: true,\n\t\tonAnySetWeather(target, source, weather) {\n\t\t\tif (this.field.getWeather().id === 'deltastream' && !STRONG_WEATHERS.includes(weather.id)) return false;\n\t\t},\n\t},\n\tdesolateland: {\n\t\tinherit: true,\n\t\tonAnySetWeather(target, source, weather) {\n\t\t\tif (this.field.getWeather().id === 'desolateland' && !STRONG_WEATHERS.includes(weather.id)) return false;\n\t\t},\n\t},\n\tprimordialsea: {\n\t\tinherit: true,\n\t\tonAnySetWeather(target, source, weather) {\n\t\t\tif (this.field.getWeather().id === 'primordialsea' && !STRONG_WEATHERS.includes(weather.id)) return false;\n\t\t},\n\t},\n\tforecast: {\n\t\tinherit: true,\n\t\tonUpdate(pokemon) {\n\t\t\tif (pokemon.baseSpecies.baseSpecies !== 'Castform' || pokemon.transformed) return;\n\t\t\tlet forme = null;\n\t\t\tswitch (pokemon.effectiveWeather()) {\n\t\t\tcase 'sunnyday':\n\t\t\tcase 'desolateland':\n\t\t\t\tif (pokemon.species.id !== 'castformsunny') forme = 'Castform-Sunny';\n\t\t\t\tbreak;\n\t\t\tcase 'raindance':\n\t\t\tcase 'primordialsea':\n\t\t\t\tif (pokemon.species.id !== 'castformrainy') forme = 'Castform-Rainy';\n\t\t\t\tbreak;\n\t\t\tcase 'winterhail':\n\t\t\tcase 'heavyhailstorm':\n\t\t\tcase 'hail':\n\t\t\t\tif (pokemon.species.id !== 'castformsnowy') forme = 'Castform-Snowy';\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tif (pokemon.species.id !== 'castform') forme = 'Castform';\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (pokemon.isActive && forme) {\n\t\t\t\tpokemon.formeChange(forme, this.effect, false, '[msg]');\n\t\t\t}\n\t\t},\n\t},\n\ticebody: {\n\t\tinherit: true,\n\t\tdesc: \"If Hail or Heavy Hailstorm is active, this Pokemon restores 1/16 of its maximum HP, rounded down, at the end of each turn. This Pokemon takes no damage from Hail or Heavy Hailstorm.\",\n\t\tshortDesc: \"Hail-like weather active: heals 1/16 max HP each turn; immunity to Hail-like weather.\",\n\t\tonWeather(target, source, effect) {\n\t\t\tif (['heavyhailstorm', 'hail', 'winterhail'].includes(effect.id)) {\n\t\t\t\tthis.heal(target.baseMaxhp / 16);\n\t\t\t}\n\t\t},\n\t\tonImmunity(type, pokemon) {\n\t\t\tif (['heavyhailstorm', 'hail', 'winterhail'].includes(type)) return false;\n\t\t},\n\t},\n\ticeface: {\n\t\tinherit: true,\n\t\tdesc: \"If this Pokemon is an Eiscue, the first physical hit it takes in battle deals 0 neutral damage. Its ice face is then broken and it changes forme to Noice Face. Eiscue regains its Ice Face forme when Hail or Heavy Hailstorm begins or when Eiscue switches in while Hail or Heavy Hailstorm is active. Confusion damage also breaks the ice face.\",\n\t\tshortDesc: \"If Eiscue, first physical hit taken deals 0 damage. Effect is restored in Hail-like weather.\",\n\t\tonStart(pokemon) {\n\t\t\tif (this.field.isWeather(['heavyhailstorm', 'hail', 'winterhail']) &&\n\t\t\t\tpokemon.species.id === 'eiscuenoice' && !pokemon.transformed) {\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Ice Face');\n\t\t\t\tthis.effectState.busted = false;\n\t\t\t\tpokemon.formeChange('Eiscue', this.effect, true);\n\t\t\t}\n\t\t},\n\t\tonWeatherChange() {\n\t\t\tconst pokemon = this.effectState.target;\n\t\t\tif (this.field.isWeather(['heavyhailstorm', 'hail', 'winterhail']) &&\n\t\t\t\tpokemon.species.id === 'eiscuenoice' && !pokemon.transformed) {\n\t\t\t\tthis.add('-activate', pokemon, 'ability: Ice Face');\n\t\t\t\tthis.effectState.busted = false;\n\t\t\t\tpokemon.formeChange('Eiscue', this.effect, true);\n\t\t\t}\n\t\t},\n\t},\n\tslushrush: {\n\t\tinherit: true,\n\t\tshortDesc: \"If a Hail-like weather is active, this Pokemon's Speed is doubled.\",\n\t\tonModifySpe(spe, pokemon) {\n\t\t\tif (this.field.isWeather(['heavyhailstorm', 'hail', 'winterhail'])) {\n\t\t\t\treturn this.chainModify(2);\n\t\t\t}\n\t\t},\n\t},\n\tsnowcloak: {\n\t\tinherit: true,\n\t\tdesc: \"If Heavy Hailstorm, Winter Hail, or Hail is active, this Pokemon's evasiveness is multiplied by 1.25. This Pokemon takes no damage from Heavy Hailstorm or Hail.\",\n\t\tshortDesc: \"If a Hail-like weather is active, 1.25x evasion; immunity to Hail-like weathers.\",\n\t\tonImmunity(type, pokemon) {\n\t\t\tif (['heavyhailstorm', 'hail', 'winterhail'].includes(type)) return false;\n\t\t},\n\t\tonModifyAccuracy(accuracy) {\n\t\t\tif (typeof accuracy !== 'number') return;\n\t\t\tif (this.field.isWeather(['heavyhailstorm', 'hail', 'winterhail'])) {\n\t\t\t\tthis.debug('Snow Cloak - decreasing accuracy');\n\t\t\t\treturn accuracy * 0.8;\n\t\t\t}\n\t\t},\n\t},\n\t// Modified Magic Guard for Alpha\n\tmagicguard: {\n\t\tinherit: true,\n\t\tshortDesc: \"This Pokemon can only be damaged by direct attacks and Heavy Hailstorm.\",\n\t\tonDamage(damage, target, source, effect) {\n\t\t\tif (effect.id === 'heavyhailstorm') return;\n\t\t\tif (effect.effectType !== 'Move') {\n\t\t\t\tif (effect.effectType === 'Ability') this.add('-activate', source, 'ability: ' + effect.name);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\t},\n\t// Modified Unaware for Blaz's move\n\tunaware: {\n\t\tinherit: true,\n\t\tonAnyModifyBoost(boosts, pokemon) {\n\t\t\tconst unawareUser = this.effectState.target;\n\t\t\tif (unawareUser === pokemon) return;\n\t\t\tif (unawareUser === this.activePokemon && pokemon === this.activeTarget) {\n\t\t\t\tboosts['def'] = 0;\n\t\t\t\tboosts['spd'] = 0;\n\t\t\t\tboosts['evasion'] = 0;\n\t\t\t}\n\t\t\tif (pokemon === this.activePokemon && unawareUser === this.activeTarget) {\n\t\t\t\tboosts['atk'] = 0;\n\t\t\t\tboosts['def'] = 0;\n\t\t\t\tboosts['spa'] = 0;\n\t\t\t\tboosts['spd'] = 0;\n\t\t\t\tboosts['accuracy'] = 0;\n\t\t\t}\n\t\t},\n\t},\n\t// Modified Stakeout for Hubriz to have a failsafe\n\tstakeout: {\n\t\tinherit: true,\n\t\tonModifyAtkPriority: 5,\n\t\tonModifyAtk(atk, attacker, defender) {\n\t\t\tif (!defender?.activeTurns) {\n\t\t\t\tthis.debug('Stakeout boost');\n\t\t\t\treturn this.chainModify(2);\n\t\t\t}\n\t\t},\n\t\tonModifySpAPriority: 5,\n\t\tonModifySpA(atk, attacker, defender) {\n\t\t\tif (!defender?.activeTurns) {\n\t\t\t\tthis.debug('Stakeout boost');\n\t\t\t\treturn this.chainModify(2);\n\t\t\t}\n\t\t},\n\t},\n};\n"],
  "mappings": "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",
  "names": ["move"]
}
