{
  "version": 3,
  "sources": ["../../../../data/mods/potd/random-teams.ts"],
  "sourcesContent": ["import {RandomTeams} from './../../random-teams';\n\nconst potdPokemon = [\n\t\"hoopa\", \"groudon\", \"dachsbun\", \"squawkabilly\", \"cacturne\", \"typhlosion\", \"jolteon\", \"masquerain\", \"falinks\",\n\t\"wyrdeer\", \"gardevoir\", \"decidueye\", \"hawlucha\", \"azelf\", \"gothitelle\", \"donphan\", \"pikachu\", \"zaciancrowned\",\n\t\"quagsire\", \"uxie\", \"dondozo\", \"orthworm\", \"klawf\", \"dunsparce\", \"avalugg\", \"pawmot\", \"qwilfish\", \"lilliganthisui\",\n];\n\nexport class RandomPOTDTeams extends RandomTeams {\n\trandomTeam() {\n\t\tthis.enforceNoDirectCustomBanlistChanges();\n\n\t\tconst seed = this.prng.seed;\n\t\tconst ruleTable = this.dex.formats.getRuleTable(this.format);\n\t\tconst pokemon: RandomTeamsTypes.RandomSet[] = [];\n\n\t\t// For Monotype\n\t\tconst isMonotype = !!this.forceMonotype || ruleTable.has('sametypeclause');\n\t\tconst isDoubles = this.format.gameType !== 'singles';\n\t\tconst typePool = this.dex.types.names();\n\t\tconst type = this.forceMonotype || this.sample(typePool);\n\n\t\t// PotD stuff\n\t\tconst day = new Date().getDate();\n\t\tconst potd = this.dex.species.get(potdPokemon[day > 28 ? 27 : day - 1]);\n\n\t\tconst baseFormes: {[k: string]: number} = {};\n\n\t\tconst tierCount: {[k: string]: number} = {};\n\t\tconst typeCount: {[k: string]: number} = {};\n\t\tconst typeComboCount: {[k: string]: number} = {};\n\t\tconst typeWeaknesses: {[k: string]: number} = {};\n\t\tconst teamDetails: RandomTeamsTypes.TeamDetails = {};\n\t\tconst [pokemonPool, baseSpeciesPool] = this.getPokemonPool(type, pokemon, isMonotype, isDoubles);\n\n\t\t// Remove PotD from baseSpeciesPool\n\t\tif (baseSpeciesPool.includes(potd.baseSpecies)) {\n\t\t\tthis.fastPop(baseSpeciesPool, baseSpeciesPool.indexOf(potd.baseSpecies));\n\t\t}\n\n\t\t// Add PotD to type counts\n\t\tfor (const typeName of potd.types) {\n\t\t\ttypeCount[typeName] = 1;\n\t\t}\n\t\ttypeComboCount[potd.types.slice().sort().join()] = 1;\n\n\t\t// Increment weakness counter\n\t\tfor (const typeName of this.dex.types.names()) {\n\t\t\t// it's weak to the type\n\t\t\tif (this.dex.getEffectiveness(typeName, potd) > 0) {\n\t\t\t\ttypeWeaknesses[typeName] = 1;\n\t\t\t}\n\t\t}\n\n\t\twhile (baseSpeciesPool.length && pokemon.length < this.maxTeamSize) {\n\t\t\tconst baseSpecies = this.sampleNoReplace(baseSpeciesPool);\n\t\t\tconst currentSpeciesPool: Species[] = [];\n\t\t\tfor (const poke of pokemonPool) {\n\t\t\t\tconst species = this.dex.species.get(poke);\n\t\t\t\tif (species.baseSpecies === baseSpecies) currentSpeciesPool.push(species);\n\t\t\t}\n\t\t\tlet species = this.sample(currentSpeciesPool);\n\t\t\tif (!species.exists) continue;\n\t\t\t// Illusion shouldn't be on the last slot\n\t\t\tif (species.baseSpecies === 'Zoroark' && pokemon.length >= (this.maxTeamSize - 1)) continue;\n\n\t\t\t// If Zoroark is in the team, the sixth slot should not be a Pokemon with extremely low level\n\t\t\tif (\n\t\t\t\tpokemon.some(pkmn => pkmn.name === 'Zoroark') &&\n\t\t\t\tpokemon.length >= (this.maxTeamSize - 1) &&\n\t\t\t\tthis.getLevel(species, isDoubles) < 72 &&\n\t\t\t\t!this.adjustLevel\n\t\t\t) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Pokemon with Last Respects, Intrepid Sword, and Dauntless Shield shouldn't be leading\n\t\t\tif (['Basculegion', 'Houndstone', 'Zacian', 'Zamazenta'].includes(species.baseSpecies) && !pokemon.length) continue;\n\n\t\t\tconst tier = species.tier;\n\t\t\tconst types = species.types;\n\t\t\tconst typeCombo = types.slice().sort().join();\n\t\t\t// Dynamically scale limits for different team sizes. The default and minimum value is 1.\n\t\t\tconst limitFactor = Math.round(this.maxTeamSize / 6) || 1;\n\n\t\t\t// Limit one Pokemon per tier, two for Monotype\n\t\t\t// Disable this for now, since it is still a new gen\n\t\t\t// Unless you want to have a lot of Ubers!\n\t\t\t// if (\n\t\t\t// \t(tierCount[tier] >= (this.forceMonotype || isMonotype ? 2 : 1) * limitFactor) &&\n\t\t\t// \t!this.randomChance(1, Math.pow(5, tierCount[tier]))\n\t\t\t// ) {\n\t\t\t// \tcontinue;\n\t\t\t// }\n\n\t\t\tif (!isMonotype && !this.forceMonotype) {\n\t\t\t\tlet skip = false;\n\n\t\t\t\t// Limit two of any type\n\t\t\t\tfor (const typeName of types) {\n\t\t\t\t\tif (typeCount[typeName] >= 2 * limitFactor) {\n\t\t\t\t\t\tskip = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (skip) continue;\n\n\t\t\t\t// Limit three weak to any type\n\t\t\t\tfor (const typeName of this.dex.types.names()) {\n\t\t\t\t\t// it's weak to the type\n\t\t\t\t\tif (this.dex.getEffectiveness(typeName, species) > 0) {\n\t\t\t\t\t\tif (!typeWeaknesses[typeName]) typeWeaknesses[typeName] = 0;\n\t\t\t\t\t\tif (typeWeaknesses[typeName] >= 3 * limitFactor) {\n\t\t\t\t\t\t\tskip = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (skip) continue;\n\t\t\t}\n\n\t\t\t// Limit one of any type combination, two in Monotype\n\t\t\tif (!this.forceMonotype && typeComboCount[typeCombo] >= (isMonotype ? 2 : 1) * limitFactor) continue;\n\n\t\t\t// The Pokemon of the Day\n\t\t\tif (potd?.exists && (pokemon.length === 1 || this.maxTeamSize === 1)) species = potd;\n\n\t\t\tconst set = this.randomSet(species, teamDetails, pokemon.length === 0, isDoubles);\n\n\t\t\t// Okay, the set passes, add it to our team\n\t\t\tpokemon.push(set);\n\t\t\tif (pokemon.length === this.maxTeamSize) {\n\t\t\t\t// Set Zoroark's level to be the same as the last Pokemon\n\t\t\t\tconst illusion = teamDetails.illusion;\n\t\t\t\tif (illusion) pokemon[illusion - 1].level = pokemon[this.maxTeamSize - 1].level;\n\n\t\t\t\t// Don't bother tracking details for the last Pokemon\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Now that our Pokemon has passed all checks, we can increment our counters\n\t\t\tbaseFormes[species.baseSpecies] = 1;\n\n\t\t\t// Increment tier counter\n\t\t\tif (tierCount[tier]) {\n\t\t\t\ttierCount[tier]++;\n\t\t\t} else {\n\t\t\t\ttierCount[tier] = 1;\n\t\t\t}\n\n\t\t\t// Don't increment type/weakness counters for POTD, since they were added at the beginning\n\t\t\tif (pokemon.length !== 1 && this.maxTeamSize !== 1) {\n\t\t\t\t// Increment type counters\n\t\t\t\tfor (const typeName of types) {\n\t\t\t\t\tif (typeName in typeCount) {\n\t\t\t\t\t\ttypeCount[typeName]++;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttypeCount[typeName] = 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (typeCombo in typeComboCount) {\n\t\t\t\t\ttypeComboCount[typeCombo]++;\n\t\t\t\t} else {\n\t\t\t\t\ttypeComboCount[typeCombo] = 1;\n\t\t\t\t}\n\n\t\t\t\t// Increment weakness counter\n\t\t\t\tfor (const typeName of this.dex.types.names()) {\n\t\t\t\t\t// it's weak to the type\n\t\t\t\t\tif (this.dex.getEffectiveness(typeName, species) > 0) {\n\t\t\t\t\t\ttypeWeaknesses[typeName]++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Track what the team has\n\t\t\tif (set.ability === 'Drizzle' || set.moves.includes('raindance')) teamDetails.rain = 1;\n\t\t\tif (set.ability === 'Drought' || set.moves.includes('sunnyday')) teamDetails.sun = 1;\n\t\t\tif (set.ability === 'Sand Stream') teamDetails.sand = 1;\n\t\t\tif (set.ability === 'Snow Warning' || set.moves.includes('snowscape') || set.moves.includes('chillyreception')) {\n\t\t\t\tteamDetails.snow = 1;\n\t\t\t}\n\t\t\tif (set.moves.includes('spikes')) teamDetails.spikes = (teamDetails.spikes || 0) + 1;\n\t\t\tif (set.moves.includes('stealthrock')) teamDetails.stealthRock = 1;\n\t\t\tif (set.moves.includes('stickyweb')) teamDetails.stickyWeb = 1;\n\t\t\tif (set.moves.includes('stoneaxe')) teamDetails.stealthRock = 1;\n\t\t\tif (set.moves.includes('toxicspikes')) teamDetails.toxicSpikes = 1;\n\t\t\tif (set.moves.includes('defog')) teamDetails.defog = 1;\n\t\t\tif (set.moves.includes('rapidspin')) teamDetails.rapidSpin = 1;\n\t\t\tif (set.moves.includes('mortalspin')) teamDetails.rapidSpin = 1;\n\t\t\tif (set.moves.includes('tidyup')) teamDetails.rapidSpin = 1;\n\t\t\tif (set.moves.includes('auroraveil') || (set.moves.includes('reflect') && set.moves.includes('lightscreen'))) {\n\t\t\t\tteamDetails.screens = 1;\n\t\t\t}\n\t\t\tif (set.role === 'Tera Blast user') teamDetails.teraBlast = 1;\n\n\t\t\t// For setting Zoroark's level\n\t\t\tif (set.ability === 'Illusion') teamDetails.illusion = pokemon.length;\n\t\t}\n\t\tif (pokemon.length < this.maxTeamSize && pokemon.length < 12) { // large teams sometimes cannot be built\n\t\t\tthrow new Error(`Could not build a random team for ${this.format} (seed=${seed})`);\n\t\t}\n\n\t\treturn pokemon;\n\t}\n}\n\nexport default RandomPOTDTeams;\n"],
  "mappings": "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",
  "names": ["species"]
}
