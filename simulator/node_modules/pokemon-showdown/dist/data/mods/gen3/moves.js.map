{
  "version": 3,
  "sources": ["../../../../data/mods/gen3/moves.ts"],
  "sourcesContent": ["/**\n * Gen 3 moves\n */\n\nexport const Moves: {[k: string]: ModdedMoveData} = {\n\tabsorb: {\n\t\tinherit: true,\n\t\tpp: 20,\n\t},\n\tacid: {\n\t\tinherit: true,\n\t\tsecondary: {\n\t\t\tchance: 10,\n\t\t\tboosts: {\n\t\t\t\tdef: -1,\n\t\t\t},\n\t\t},\n\t},\n\tancientpower: {\n\t\tinherit: true,\n\t\tflags: {contact: 1, protect: 1, mirror: 1},\n\t},\n\tastonish: {\n\t\tinherit: true,\n\t\tbasePowerCallback(pokemon, target) {\n\t\t\tif (target.volatiles['minimize']) return 60;\n\t\t\treturn 30;\n\t\t},\n\t},\n\tbeatup: {\n\t\tinherit: true,\n\t\tonModifyMove(move, pokemon) {\n\t\t\tpokemon.addVolatile('beatup');\n\t\t\tmove.type = '???';\n\t\t\tmove.category = 'Special';\n\t\t\tmove.allies = pokemon.side.pokemon.filter(ally => !ally.fainted && !ally.status);\n\t\t\tmove.multihit = move.allies.length;\n\t\t},\n\t\tcondition: {\n\t\t\tduration: 1,\n\t\t\tonModifySpAPriority: -101,\n\t\t\tonModifySpA(atk, pokemon, defender, move) {\n\t\t\t\t// https://www.smogon.com/forums/posts/8992145/\n\t\t\t\t// this.add('-activate', pokemon, 'move: Beat Up', '[of] ' + move.allies![0].name);\n\t\t\t\tthis.event.modifier = 1;\n\t\t\t\treturn move.allies!.shift()!.species.baseStats.atk;\n\t\t\t},\n\t\t\tonFoeModifySpDPriority: -101,\n\t\t\tonFoeModifySpD(def, pokemon) {\n\t\t\t\tthis.event.modifier = 1;\n\t\t\t\treturn pokemon.species.baseStats.def;\n\t\t\t},\n\t\t},\n\t},\n\tbide: {\n\t\tinherit: true,\n\t\taccuracy: 100,\n\t\tpriority: 0,\n\t\tcondition: {\n\t\t\tduration: 3,\n\t\t\tonLockMove: 'bide',\n\t\t\tonStart(pokemon) {\n\t\t\t\tthis.effectState.totalDamage = 0;\n\t\t\t\tthis.add('-start', pokemon, 'move: Bide');\n\t\t\t},\n\t\t\tonDamagePriority: -101,\n\t\t\tonDamage(damage, target, source, move) {\n\t\t\t\tif (!move || move.effectType !== 'Move' || !source) return;\n\t\t\t\tthis.effectState.totalDamage += damage;\n\t\t\t\tthis.effectState.lastDamageSource = source;\n\t\t\t},\n\t\t\tonBeforeMove(pokemon, target, move) {\n\t\t\t\tif (this.effectState.duration === 1) {\n\t\t\t\t\tthis.add('-end', pokemon, 'move: Bide');\n\t\t\t\t\tif (!this.effectState.totalDamage) {\n\t\t\t\t\t\tthis.add('-fail', pokemon);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\ttarget = this.effectState.lastDamageSource;\n\t\t\t\t\tif (!target) {\n\t\t\t\t\t\tthis.add('-fail', pokemon);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tif (!target.isActive) {\n\t\t\t\t\t\tconst possibleTarget = this.getRandomTarget(pokemon, this.dex.moves.get('pound'));\n\t\t\t\t\t\tif (!possibleTarget) {\n\t\t\t\t\t\t\tthis.add('-miss', pokemon);\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttarget = possibleTarget;\n\t\t\t\t\t}\n\t\t\t\t\tconst moveData = {\n\t\t\t\t\t\tid: 'bide' as ID,\n\t\t\t\t\t\tname: \"Bide\",\n\t\t\t\t\t\taccuracy: 100,\n\t\t\t\t\t\tdamage: this.effectState.totalDamage * 2,\n\t\t\t\t\t\tcategory: \"Physical\",\n\t\t\t\t\t\tpriority: 0,\n\t\t\t\t\t\tflags: {contact: 1, protect: 1},\n\t\t\t\t\t\teffectType: 'Move',\n\t\t\t\t\t\ttype: 'Normal',\n\t\t\t\t\t} as unknown as ActiveMove;\n\t\t\t\t\tthis.actions.tryMoveHit(target, pokemon, moveData);\n\t\t\t\t\tpokemon.removeVolatile('bide');\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tthis.add('-activate', pokemon, 'move: Bide');\n\t\t\t},\n\t\t\tonMoveAborted(pokemon) {\n\t\t\t\tpokemon.removeVolatile('bide');\n\t\t\t},\n\t\t\tonEnd(pokemon) {\n\t\t\t\tthis.add('-end', pokemon, 'move: Bide', '[silent]');\n\t\t\t},\n\t\t},\n\t},\n\tblizzard: {\n\t\tinherit: true,\n\t\tonModifyMove() { },\n\t},\n\tbrickbreak: {\n\t\tinherit: true,\n\t\tonTryHit(target, source) {\n\t\t\t// will shatter screens through sub, before you hit\n\t\t\tconst foe = source.side.foe;\n\t\t\tfoe.removeSideCondition('reflect');\n\t\t\tfoe.removeSideCondition('lightscreen');\n\t\t},\n\t},\n\tcharge: {\n\t\tinherit: true,\n\t\tboosts: null,\n\t},\n\tconversion: {\n\t\tinherit: true,\n\t\tonHit(target) {\n\t\t\tconst possibleTypes = target.moveSlots.map(moveSlot => {\n\t\t\t\tconst move = this.dex.moves.get(moveSlot.id);\n\t\t\t\tif (move.id !== 'curse' && !target.hasType(move.type)) {\n\t\t\t\t\treturn move.type;\n\t\t\t\t}\n\t\t\t\treturn '';\n\t\t\t}).filter(type => type);\n\t\t\tif (!possibleTypes.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tconst type = this.sample(possibleTypes);\n\n\t\t\tif (!target.setType(type)) return false;\n\t\t\tthis.add('-start', target, 'typechange', type);\n\t\t},\n\t},\n\tcounter: {\n\t\tinherit: true,\n\t\tcondition: {\n\t\t\tduration: 1,\n\t\t\tnoCopy: true,\n\t\t\tonStart(target, source, move) {\n\t\t\t\tthis.effectState.slot = null;\n\t\t\t\tthis.effectState.damage = 0;\n\t\t\t},\n\t\t\tonRedirectTargetPriority: -1,\n\t\t\tonRedirectTarget(target, source, source2) {\n\t\t\t\tif (source !== this.effectState.target || !this.effectState.slot) return;\n\t\t\t\treturn this.getAtSlot(this.effectState.slot);\n\t\t\t},\n\t\t\tonDamagePriority: -101,\n\t\t\tonDamage(damage, target, source, effect) {\n\t\t\t\tif (\n\t\t\t\t\teffect.effectType === 'Move' && !source.isAlly(target) &&\n\t\t\t\t\t(effect.category === 'Physical' || effect.id === 'hiddenpower')\n\t\t\t\t) {\n\t\t\t\t\tthis.effectState.slot = source.getSlot();\n\t\t\t\t\tthis.effectState.damage = 2 * damage;\n\t\t\t\t}\n\t\t\t},\n\t\t},\n\t},\n\tcovet: {\n\t\tinherit: true,\n\t\tflags: {protect: 1, mirror: 1, noassist: 1},\n\t},\n\tcrunch: {\n\t\tinherit: true,\n\t\tsecondary: {\n\t\t\tchance: 20,\n\t\t\tboosts: {\n\t\t\t\tspd: -1,\n\t\t\t},\n\t\t},\n\t},\n\tdig: {\n\t\tinherit: true,\n\t\tbasePower: 60,\n\t},\n\tdisable: {\n\t\tinherit: true,\n\t\taccuracy: 55,\n\t\tflags: {protect: 1, mirror: 1, bypasssub: 1},\n\t\tvolatileStatus: 'disable',\n\t\tcondition: {\n\t\t\tdurationCallback() {\n\t\t\t\treturn this.random(2, 6);\n\t\t\t},\n\t\t\tnoCopy: true,\n\t\t\tonStart(pokemon) {\n\t\t\t\tif (!this.queue.willMove(pokemon)) {\n\t\t\t\t\tthis.effectState.duration++;\n\t\t\t\t}\n\t\t\t\tif (!pokemon.lastMove) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tfor (const moveSlot of pokemon.moveSlots) {\n\t\t\t\t\tif (moveSlot.id === pokemon.lastMove.id) {\n\t\t\t\t\t\tif (!moveSlot.pp) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.add('-start', pokemon, 'Disable', moveSlot.move);\n\t\t\t\t\t\t\tthis.effectState.move = pokemon.lastMove.id;\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tonEnd(pokemon) {\n\t\t\t\tthis.add('-end', pokemon, 'move: Disable');\n\t\t\t},\n\t\t\tonBeforeMove(attacker, defender, move) {\n\t\t\t\tif (move.id === this.effectState.move) {\n\t\t\t\t\tthis.add('cant', attacker, 'Disable', move);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\t\t\tonDisableMove(pokemon) {\n\t\t\t\tfor (const moveSlot of pokemon.moveSlots) {\n\t\t\t\t\tif (moveSlot.id === this.effectState.move) {\n\t\t\t\t\t\tpokemon.disableMove(moveSlot.id);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t},\n\t},\n\tdive: {\n\t\tinherit: true,\n\t\tbasePower: 60,\n\t},\n\tdoomdesire: {\n\t\tinherit: true,\n\t\tonTry(source, target) {\n\t\t\tif (!target.side.addSlotCondition(target, 'futuremove')) return false;\n\t\t\tconst moveData = {\n\t\t\t\tname: \"Doom Desire\",\n\t\t\t\tbasePower: 120,\n\t\t\t\tcategory: \"Physical\",\n\t\t\t\tflags: {},\n\t\t\t\twillCrit: false,\n\t\t\t\ttype: '???',\n\t\t\t} as unknown as ActiveMove;\n\t\t\tconst damage = this.actions.getDamage(source, target, moveData, true);\n\t\t\tObject.assign(target.side.slotConditions[target.position]['futuremove'], {\n\t\t\t\tduration: 3,\n\t\t\t\tmove: 'doomdesire',\n\t\t\t\tsource: source,\n\t\t\t\tmoveData: {\n\t\t\t\t\tid: 'doomdesire',\n\t\t\t\t\tname: \"Doom Desire\",\n\t\t\t\t\taccuracy: 85,\n\t\t\t\t\tbasePower: 0,\n\t\t\t\t\tdamage: damage,\n\t\t\t\t\tcategory: \"Physical\",\n\t\t\t\t\tflags: {futuremove: 1},\n\t\t\t\t\teffectType: 'Move',\n\t\t\t\t\ttype: '???',\n\t\t\t\t},\n\t\t\t});\n\t\t\tthis.add('-start', source, 'Doom Desire');\n\t\t\treturn null;\n\t\t},\n\t},\n\tencore: {\n\t\tinherit: true,\n\t\tvolatileStatus: 'encore',\n\t\tcondition: {\n\t\t\tdurationCallback() {\n\t\t\t\treturn this.random(3, 7);\n\t\t\t},\n\t\t\tonStart(target, source) {\n\t\t\t\tconst moveIndex = target.lastMove ? target.moves.indexOf(target.lastMove.id) : -1;\n\t\t\t\tif (\n\t\t\t\t\t!target.lastMove || target.lastMove.flags['failencore'] ||\n\t\t\t\t\t!target.moveSlots[moveIndex] || target.moveSlots[moveIndex].pp <= 0\n\t\t\t\t) {\n\t\t\t\t\t// it failed\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tthis.effectState.move = target.lastMove.id;\n\t\t\t\tthis.add('-start', target, 'Encore');\n\t\t\t},\n\t\t\tonOverrideAction(pokemon) {\n\t\t\t\treturn this.effectState.move;\n\t\t\t},\n\t\t\tonResidualOrder: 10,\n\t\t\tonResidualSubOrder: 14,\n\t\t\tonResidual(target) {\n\t\t\t\tif (\n\t\t\t\t\ttarget.moves.includes(this.effectState.move) &&\n\t\t\t\t\ttarget.moveSlots[target.moves.indexOf(this.effectState.move)].pp <= 0\n\t\t\t\t) {\n\t\t\t\t\t// early termination if you run out of PP\n\t\t\t\t\ttarget.removeVolatile('encore');\n\t\t\t\t}\n\t\t\t},\n\t\t\tonEnd(target) {\n\t\t\t\tthis.add('-end', target, 'Encore');\n\t\t\t},\n\t\t\tonDisableMove(pokemon) {\n\t\t\t\tif (!this.effectState.move || !pokemon.hasMove(this.effectState.move)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tfor (const moveSlot of pokemon.moveSlots) {\n\t\t\t\t\tif (moveSlot.id !== this.effectState.move) {\n\t\t\t\t\t\tpokemon.disableMove(moveSlot.id);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t},\n\t},\n\textrasensory: {\n\t\tinherit: true,\n\t\tbasePowerCallback(pokemon, target) {\n\t\t\tif (target.volatiles['minimize']) return 160;\n\t\t\treturn 80;\n\t\t},\n\t},\n\tfakeout: {\n\t\tinherit: true,\n\t\tflags: {protect: 1, mirror: 1},\n\t},\n\tfeintattack: {\n\t\tinherit: true,\n\t\tflags: {protect: 1, mirror: 1},\n\t},\n\tflash: {\n\t\tinherit: true,\n\t\taccuracy: 70,\n\t},\n\tfly: {\n\t\tinherit: true,\n\t\tbasePower: 70,\n\t},\n\tfollowme: {\n\t\tinherit: true,\n\t\tvolatileStatus: undefined,\n\t\tslotCondition: 'followme',\n\t\tcondition: {\n\t\t\tduration: 1,\n\t\t\tonStart(target, source, effect) {\n\t\t\t\tthis.add('-singleturn', target, 'move: Follow Me');\n\t\t\t\tthis.effectState.slot = target.getSlot();\n\t\t\t},\n\t\t\tonFoeRedirectTargetPriority: 1,\n\t\t\tonFoeRedirectTarget(target, source, source2, move) {\n\t\t\t\tconst userSlot = this.getAtSlot(this.effectState.slot);\n\t\t\t\tif (this.validTarget(userSlot, source, move.target)) {\n\t\t\t\t\treturn userSlot;\n\t\t\t\t}\n\t\t\t},\n\t\t},\n\t},\n\tforesight: {\n\t\tinherit: true,\n\t\taccuracy: 100,\n\t},\n\tfurycutter: {\n\t\tinherit: true,\n\t\tonHit(target, source) {\n\t\t\tsource.addVolatile('furycutter');\n\t\t},\n\t},\n\tgigadrain: {\n\t\tinherit: true,\n\t\tpp: 5,\n\t},\n\tglare: {\n\t\tinherit: true,\n\t\tignoreImmunity: false,\n\t},\n\thiddenpower: {\n\t\tinherit: true,\n\t\tcategory: \"Physical\",\n\t\tonModifyMove(move, pokemon) {\n\t\t\tmove.type = pokemon.hpType || 'Dark';\n\t\t\tconst specialTypes = ['Fire', 'Water', 'Grass', 'Ice', 'Electric', 'Dark', 'Psychic', 'Dragon'];\n\t\t\tmove.category = specialTypes.includes(move.type) ? 'Special' : 'Physical';\n\t\t},\n\t},\n\thighjumpkick: {\n\t\tinherit: true,\n\t\tbasePower: 85,\n\t\tonMoveFail(target, source, move) {\n\t\t\tif (target.runImmunity('Fighting')) {\n\t\t\t\tconst damage = this.actions.getDamage(source, target, move, true);\n\t\t\t\tif (typeof damage !== 'number') throw new Error(\"HJK recoil failed\");\n\t\t\t\tthis.damage(this.clampIntRange(damage / 2, 1, Math.floor(target.maxhp / 2)), source, source, move);\n\t\t\t}\n\t\t},\n\t},\n\thypnosis: {\n\t\tinherit: true,\n\t\taccuracy: 60,\n\t},\n\tjumpkick: {\n\t\tinherit: true,\n\t\tbasePower: 70,\n\t\tonMoveFail(target, source, move) {\n\t\t\tif (target.runImmunity('Fighting')) {\n\t\t\t\tconst damage = this.actions.getDamage(source, target, move, true);\n\t\t\t\tif (typeof damage !== 'number') throw new Error(\"Jump Kick didn't recoil\");\n\t\t\t\tthis.damage(this.clampIntRange(damage / 2, 1, Math.floor(target.maxhp / 2)), source, source, move);\n\t\t\t}\n\t\t},\n\t},\n\tleafblade: {\n\t\tinherit: true,\n\t\tbasePower: 70,\n\t},\n\tlockon: {\n\t\tinherit: true,\n\t\taccuracy: 100,\n\t},\n\tmegadrain: {\n\t\tinherit: true,\n\t\tpp: 10,\n\t},\n\tmemento: {\n\t\tinherit: true,\n\t\taccuracy: true,\n\t},\n\tmindreader: {\n\t\tinherit: true,\n\t\taccuracy: 100,\n\t},\n\tmimic: {\n\t\tinherit: true,\n\t\tflags: {protect: 1, bypasssub: 1, allyanim: 1, failencore: 1, noassist: 1, failmimic: 1},\n\t},\n\tmirrorcoat: {\n\t\tinherit: true,\n\t\tcondition: {\n\t\t\tduration: 1,\n\t\t\tnoCopy: true,\n\t\t\tonStart(target, source, move) {\n\t\t\t\tthis.effectState.slot = null;\n\t\t\t\tthis.effectState.damage = 0;\n\t\t\t},\n\t\t\tonRedirectTargetPriority: -1,\n\t\t\tonRedirectTarget(target, source, source2) {\n\t\t\t\tif (source !== this.effectState.target || !this.effectState.slot) return;\n\t\t\t\treturn this.getAtSlot(this.effectState.slot);\n\t\t\t},\n\t\t\tonDamagePriority: -101,\n\t\t\tonDamage(damage, target, source, effect) {\n\t\t\t\tif (\n\t\t\t\t\teffect.effectType === 'Move' && !source.isAlly(target) &&\n\t\t\t\t\teffect.category === 'Special' && effect.id !== 'hiddenpower'\n\t\t\t\t) {\n\t\t\t\t\tthis.effectState.slot = source.getSlot();\n\t\t\t\t\tthis.effectState.damage = 2 * damage;\n\t\t\t\t}\n\t\t\t},\n\t\t},\n\t},\n\tmirrormove: {\n\t\tinherit: true,\n\t\tonTryHit() { },\n\t\tonHit(pokemon) {\n\t\t\tconst noMirror = [\n\t\t\t\t'assist', 'curse', 'doomdesire', 'focuspunch', 'futuresight', 'magiccoat', 'metronome', 'mimic', 'mirrormove', 'naturepower', 'psychup', 'roleplay', 'sketch', 'sleeptalk', 'spikes', 'spitup', 'taunt', 'teeterdance', 'transform',\n\t\t\t];\n\t\t\tconst lastAttackedBy = pokemon.getLastAttackedBy();\n\t\t\tif (!lastAttackedBy?.source.lastMove || !lastAttackedBy.move) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (noMirror.includes(lastAttackedBy.move) || !lastAttackedBy.source.hasMove(lastAttackedBy.move)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tthis.actions.useMove(lastAttackedBy.move, pokemon);\n\t\t},\n\t\ttarget: \"self\",\n\t},\n\tnaturepower: {\n\t\tinherit: true,\n\t\taccuracy: 95,\n\t\tonHit(target) {\n\t\t\tthis.actions.useMove('swift', target);\n\t\t},\n\t},\n\tneedlearm: {\n\t\tinherit: true,\n\t\tbasePowerCallback(pokemon, target) {\n\t\t\tif (target.volatiles['minimize']) return 120;\n\t\t\treturn 60;\n\t\t},\n\t},\n\tnightmare: {\n\t\tinherit: true,\n\t\taccuracy: true,\n\t},\n\todorsleuth: {\n\t\tinherit: true,\n\t\taccuracy: 100,\n\t},\n\toutrage: {\n\t\tinherit: true,\n\t\tbasePower: 90,\n\t},\n\toverheat: {\n\t\tinherit: true,\n\t\tflags: {contact: 1, protect: 1, mirror: 1},\n\t},\n\tpetaldance: {\n\t\tinherit: true,\n\t\tbasePower: 70,\n\t},\n\trecover: {\n\t\tinherit: true,\n\t\tpp: 20,\n\t},\n\trocksmash: {\n\t\tinherit: true,\n\t\tbasePower: 20,\n\t},\n\tsketch: {\n\t\tinherit: true,\n\t\tflags: {bypasssub: 1, failencore: 1, noassist: 1, failmimic: 1},\n\t},\n\tsleeptalk: {\n\t\tinherit: true,\n\t\tonHit(pokemon) {\n\t\t\tconst moves = [];\n\t\t\tfor (const moveSlot of pokemon.moveSlots) {\n\t\t\t\tconst moveid = moveSlot.id;\n\t\t\t\tconst pp = moveSlot.pp;\n\t\t\t\tconst move = this.dex.moves.get(moveid);\n\t\t\t\tif (moveid && !move.flags['nosleeptalk'] && !move.flags['charge']) {\n\t\t\t\t\tmoves.push({move: moveid, pp: pp});\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!moves.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tconst randomMove = this.sample(moves);\n\t\t\tif (!randomMove.pp) {\n\t\t\t\tthis.add('cant', pokemon, 'nopp', randomMove.move);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.actions.useMove(randomMove.move, pokemon);\n\t\t},\n\t},\n\tspite: {\n\t\tinherit: true,\n\t\tonHit(target) {\n\t\t\tconst roll = this.random(2, 6);\n\t\t\tif (target.lastMove && target.deductPP(target.lastMove.id, roll)) {\n\t\t\t\tthis.add(\"-activate\", target, 'move: Spite', target.lastMove.id, roll);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t},\n\tstockpile: {\n\t\tinherit: true,\n\t\tpp: 10,\n\t\tcondition: {\n\t\t\tnoCopy: true,\n\t\t\tonStart(target) {\n\t\t\t\tthis.effectState.layers = 1;\n\t\t\t\tthis.add('-start', target, 'stockpile' + this.effectState.layers);\n\t\t\t},\n\t\t\tonRestart(target) {\n\t\t\t\tif (this.effectState.layers >= 3) return false;\n\t\t\t\tthis.effectState.layers++;\n\t\t\t\tthis.add('-start', target, 'stockpile' + this.effectState.layers);\n\t\t\t},\n\t\t\tonEnd(target) {\n\t\t\t\tthis.effectState.layers = 0;\n\t\t\t\tthis.add('-end', target, 'Stockpile');\n\t\t\t},\n\t\t},\n\t},\n\tstruggle: {\n\t\tinherit: true,\n\t\tflags: {contact: 1, protect: 1, noassist: 1, failencore: 1, failmimic: 1},\n\t\taccuracy: 100,\n\t\trecoil: [1, 4],\n\t\tstruggleRecoil: false,\n\t},\n\tsurf: {\n\t\tinherit: true,\n\t\ttarget: \"allAdjacentFoes\",\n\t},\n\ttaunt: {\n\t\tinherit: true,\n\t\tflags: {protect: 1, bypasssub: 1},\n\t\tcondition: {\n\t\t\tduration: 2,\n\t\t\tonStart(target) {\n\t\t\t\tthis.add('-start', target, 'move: Taunt');\n\t\t\t},\n\t\t\tonResidualOrder: 10,\n\t\t\tonResidualSubOrder: 15,\n\t\t\tonEnd(target) {\n\t\t\t\tthis.add('-end', target, 'move: Taunt', '[silent]');\n\t\t\t},\n\t\t\tonDisableMove(pokemon) {\n\t\t\t\tfor (const moveSlot of pokemon.moveSlots) {\n\t\t\t\t\tif (this.dex.moves.get(moveSlot.move).category === 'Status') {\n\t\t\t\t\t\tpokemon.disableMove(moveSlot.id);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tonBeforeMove(attacker, defender, move) {\n\t\t\t\tif (move.category === 'Status') {\n\t\t\t\t\tthis.add('cant', attacker, 'move: Taunt', move);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\t\t},\n\t},\n\tteeterdance: {\n\t\tinherit: true,\n\t\tflags: {protect: 1},\n\t},\n\ttickle: {\n\t\tinherit: true,\n\t\tflags: {protect: 1, reflectable: 1, mirror: 1, bypasssub: 1},\n\t},\n\tuproar: {\n\t\tinherit: true,\n\t\tcondition: {\n\t\t\tonStart(target) {\n\t\t\t\tthis.add('-start', target, 'Uproar');\n\t\t\t\t// 2-5 turns\n\t\t\t\tthis.effectState.duration = this.random(2, 6);\n\t\t\t},\n\t\t\tonResidual(target) {\n\t\t\t\tif (target.volatiles['throatchop']) {\n\t\t\t\t\ttarget.removeVolatile('uproar');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (target.lastMove && target.lastMove.id === 'struggle') {\n\t\t\t\t\t// don't lock\n\t\t\t\t\tdelete target.volatiles['uproar'];\n\t\t\t\t}\n\t\t\t\tthis.add('-start', target, 'Uproar', '[upkeep]');\n\t\t\t},\n\t\t\tonResidualOrder: 10,\n\t\t\tonResidualSubOrder: 11,\n\t\t\tonEnd(target) {\n\t\t\t\tthis.add('-end', target, 'Uproar');\n\t\t\t},\n\t\t\tonLockMove: 'uproar',\n\t\t\tonAnySetStatus(status, pokemon) {\n\t\t\t\tif (status.id === 'slp') {\n\t\t\t\t\tif (pokemon === this.effectState.target) {\n\t\t\t\t\t\tthis.add('-fail', pokemon, 'slp', '[from] Uproar', '[msg]');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.add('-fail', pokemon, 'slp', '[from] Uproar');\n\t\t\t\t\t}\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t},\n\t\t},\n\t},\n\tvinewhip: {\n\t\tinherit: true,\n\t\tpp: 10,\n\t},\n\tvolttackle: {\n\t\tinherit: true,\n\t\tsecondary: null,\n\t},\n\twaterfall: {\n\t\tinherit: true,\n\t\tsecondary: null,\n\t},\n\tweatherball: {\n\t\tinherit: true,\n\t\tonModifyMove(move) {\n\t\t\tswitch (this.field.effectiveWeather()) {\n\t\t\tcase 'sunnyday':\n\t\t\t\tmove.type = 'Fire';\n\t\t\t\tmove.category = 'Special';\n\t\t\t\tbreak;\n\t\t\tcase 'raindance':\n\t\t\t\tmove.type = 'Water';\n\t\t\t\tmove.category = 'Special';\n\t\t\t\tbreak;\n\t\t\tcase 'sandstorm':\n\t\t\t\tmove.type = 'Rock';\n\t\t\t\tbreak;\n\t\t\tcase 'hail':\n\t\t\t\tmove.type = 'Ice';\n\t\t\t\tmove.category = 'Special';\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (this.field.effectiveWeather()) move.basePower *= 2;\n\t\t},\n\t},\n\tzapcannon: {\n\t\tinherit: true,\n\t\tbasePower: 100,\n\t},\n};\n"],
  "mappings": "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",
  "names": ["type"]
}
