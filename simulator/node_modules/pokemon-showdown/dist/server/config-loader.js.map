{
  "version": 3,
  "sources": ["../../server/config-loader.ts"],
  "sourcesContent": ["/**\n * Config loader\n * Pokemon Showdown - http://pokemonshowdown.com/\n *\n * @license MIT\n */\n\nimport * as defaults from '../config/config-example';\nimport type {GroupInfo, EffectiveGroupSymbol} from './user-groups';\nimport {ProcessManager, FS} from '../lib';\n\nexport type ConfigType = typeof defaults & {\n\tgroups: {[symbol: string]: GroupInfo},\n\tgroupsranking: EffectiveGroupSymbol[],\n\tgreatergroupscache: {[combo: string]: GroupSymbol},\n\t[k: string]: any,\n};\n/** Map<process flag, config settings for it to turn on> */\nconst FLAG_PRESETS = new Map([\n\t['--no-security', ['nothrottle', 'noguestsecurity', 'noipchecks']],\n]);\n\nconst CONFIG_PATH = FS('./config/config.js').path;\n\nexport function load(invalidate = false) {\n\tif (invalidate) delete require.cache[CONFIG_PATH];\n\tconst config = ({...defaults, ...require(CONFIG_PATH)}) as ConfigType;\n\t// config.routes is nested - we need to ensure values are set for its keys as well.\n\tconfig.routes = {...defaults.routes, ...config.routes};\n\n\t// Automatically stop startup if better-sqlite3 isn't installed and SQLite is enabled\n\tif (config.usesqlite) {\n\t\ttry {\n\t\t\trequire('better-sqlite3');\n\t\t} catch {\n\t\t\tthrow new Error(`better-sqlite3 is not installed or could not be loaded, but Config.usesqlite is enabled.`);\n\t\t}\n\t}\n\n\tfor (const [preset, values] of FLAG_PRESETS) {\n\t\tif (process.argv.includes(preset)) {\n\t\t\tfor (const value of values) config[value] = true;\n\t\t}\n\t}\n\n\tcacheGroupData(config);\n\treturn config;\n}\n\nexport function cacheGroupData(config: ConfigType) {\n\tif (config.groups) {\n\t\t// Support for old config groups format.\n\t\t// Should be removed soon.\n\t\treportError(\n\t\t\t`You are using a deprecated version of user group specification in config.\\n` +\n\t\t\t`Support for this will be removed soon.\\n` +\n\t\t\t`Please ensure that you update your config.js to the new format (see config-example.js, line 457).\\n`\n\t\t);\n\t} else {\n\t\tconfig.punishgroups = Object.create(null);\n\t\tconfig.groups = Object.create(null);\n\t\tconfig.groupsranking = [];\n\t\tconfig.greatergroupscache = Object.create(null);\n\t}\n\n\tconst groups = config.groups;\n\tconst punishgroups = config.punishgroups;\n\tconst cachedGroups: {[k: string]: 'processing' | true} = {};\n\n\tfunction isPermission(key: string) {\n\t\treturn !['symbol', 'id', 'name', 'rank', 'globalGroupInPersonalRoom'].includes(key);\n\t}\n\tfunction cacheGroup(symbol: string, groupData: GroupInfo) {\n\t\tif (cachedGroups[symbol] === 'processing') {\n\t\t\tthrow new Error(`Cyclic inheritance in group config for symbol \"${symbol}\"`);\n\t\t}\n\t\tif (cachedGroups[symbol] === true) return;\n\n\t\tfor (const key in groupData) {\n\t\t\tif (isPermission(key)) {\n\t\t\t\tconst jurisdiction = groupData[key as 'jurisdiction'];\n\t\t\t\tif (typeof jurisdiction === 'string' && jurisdiction.includes('s')) {\n\t\t\t\t\treportError(`Outdated jurisdiction for permission \"${key}\" of group \"${symbol}\": 's' is no longer a supported jurisdiction; we now use 'ipself' and 'altsself'`);\n\t\t\t\t\tdelete groupData[key as 'jurisdiction'];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (groupData['inherit']) {\n\t\t\tcachedGroups[symbol] = 'processing';\n\t\t\tconst inheritGroup = groups[groupData['inherit']];\n\t\t\tcacheGroup(groupData['inherit'], inheritGroup);\n\t\t\t// Add lower group permissions to higher ranked groups,\n\t\t\t// preserving permissions specifically declared for the higher group.\n\t\t\tfor (const key in inheritGroup) {\n\t\t\t\tif (key in groupData) continue;\n\t\t\t\tif (!isPermission(key)) continue;\n\t\t\t\t(groupData as any)[key] = (inheritGroup as any)[key];\n\t\t\t}\n\t\t\tdelete groupData['inherit'];\n\t\t}\n\t\tcachedGroups[symbol] = true;\n\t}\n\n\tif (config.grouplist) { // Using new groups format.\n\t\tconst grouplist = config.grouplist as any;\n\t\tconst numGroups = grouplist.length;\n\t\tfor (let i = 0; i < numGroups; i++) {\n\t\t\tconst groupData = grouplist[i];\n\n\t\t\t// punish groups\n\t\t\tif (groupData.punishgroup) {\n\t\t\t\tpunishgroups[groupData.id] = groupData;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tgroupData.rank = numGroups - i - 1;\n\t\t\tgroups[groupData.symbol] = groupData;\n\t\t\tconfig.groupsranking.unshift(groupData.symbol);\n\t\t}\n\t}\n\n\tfor (const sym in groups) {\n\t\tconst groupData = groups[sym];\n\t\tcacheGroup(sym, groupData);\n\t}\n\n\t// hardcode default punishgroups.\n\tif (!punishgroups.locked) {\n\t\tpunishgroups.locked = {\n\t\t\tname: 'Locked',\n\t\t\tid: 'locked',\n\t\t\tsymbol: '\\u203d',\n\t\t};\n\t}\n\tif (!punishgroups.muted) {\n\t\tpunishgroups.muted = {\n\t\t\tname: 'Muted',\n\t\t\tid: 'muted',\n\t\t\tsymbol: '!',\n\t\t};\n\t}\n}\n\nexport function checkRipgrepAvailability() {\n\tif (Config.ripgrepmodlog === undefined) {\n\t\tconst cwd = FS.ROOT_PATH;\n\t\tConfig.ripgrepmodlog = (async () => {\n\t\t\ttry {\n\t\t\t\tawait ProcessManager.exec(['rg', '--version'], {cwd});\n\t\t\t\tawait ProcessManager.exec(['tac', '--version'], {cwd});\n\t\t\t\treturn true;\n\t\t\t} catch {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t})();\n\t}\n\treturn Config.ripgrepmodlog;\n}\n\n\nfunction reportError(msg: string) {\n\t// This module generally loads before Monitor, so we put this in a setImmediate to wait for it to load.\n\t// Most child processes don't have Monitor.error, but the main process should always have them, and Config\n\t// errors should always be the same across processes, so this is a neat way to avoid unnecessary logging.\n\t// @ts-ignore typescript doesn't like us accessing Monitor like this\n\tsetImmediate(() => global.Monitor?.error?.(msg));\n}\nexport const Config = load();\n"],
  "mappings": "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",
  "names": []
}
